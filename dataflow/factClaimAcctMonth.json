{
	"name": "factClaimAcctMonth",
	"properties": {
		"folder": {
			"name": "Insurance Analytics Azure/ccDimDataflows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_LOSS_TRANSACTION_VW",
						"type": "DatasetReference"
					},
					"name": "losstransactionView"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_POLICY",
						"type": "DatasetReference"
					},
					"name": "dimPolicy"
				},
				{
					"dataset": {
						"referenceName": "ds_dw_dim_location",
						"type": "DatasetReference"
					},
					"name": "dimLocation"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_AGENCY",
						"type": "DatasetReference"
					},
					"name": "dimAgency"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_AGENT",
						"type": "DatasetReference"
					},
					"name": "dimAgent"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_COVERAGE",
						"type": "DatasetReference"
					},
					"name": "dimCoverage"
				},
				{
					"dataset": {
						"referenceName": "DS_AZSQL_ORGANIZATION",
						"type": "DatasetReference"
					},
					"name": "dimOrganization"
				},
				{
					"dataset": {
						"referenceName": "DS_DW_DIM_PRODUCT",
						"type": "DatasetReference"
					},
					"name": "dimProduct"
				},
				{
					"dataset": {
						"referenceName": "DS_DW_DIM_CLAIM",
						"type": "DatasetReference"
					},
					"name": "dimClaim"
				},
				{
					"dataset": {
						"referenceName": "DS_DW_DIM_CLAIM_FEATURE",
						"type": "DatasetReference"
					},
					"name": "dimClaimfeature"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DW_FACT_CLAIM_ACCT_MONTH",
						"type": "DatasetReference"
					},
					"name": "factCLaimAcctMonth"
				}
			],
			"transformations": [
				{
					"name": "joinLosstransactionViewTransAndOrg"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProduct"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProductAndPolicy"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocation"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgent"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgency"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverage"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverageAndClaim"
				},
				{
					"name": "joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverageAndClaimAndClaimfeature"
				},
				{
					"name": "losstransactionViewTrans"
				},
				{
					"name": "aggregation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CC_TRANSACTIONLINEITEM_ID as long,",
				"          CLAIM_KEY as string,",
				"          CURRENCY_CODE as integer,",
				"          SOURCE as string,",
				"          TRANSACTION_ALLOC_CODE as string,",
				"          TRANSACTION_AMOUNT as decimal(29,2),",
				"          RESERVE_CHANGE_AMOUNT as decimal(29,2),",
				"          RECOVERY_CATEGORY_TYPECODE as string,",
				"          TRANSACTION_CODE as string,",
				"          TRANSACTION_PROCESS_DATEID as string,",
				"          TRANSACTION_SEQ as long,",
				"          TRANSACTION_TYPECODE as string,",
				"          TRANACTION_DOESNOTERODERESERVES as integer,",
				"          TRANSACTION_STATUS as integer,",
				"          ACCOUNTING_PRDID as string,",
				"          CHECK_ISSUEDATE as timestamp,",
				"          TRANS_PROCESSING_DATE as timestamp,",
				"          TRANSACTION_CURRENCY as integer,",
				"          CHECK_PUBLICID as string,",
				"          TRNLIN_LINEITEM as integer,",
				"          CLAIMANT_KEY as string,",
				"          FEATURE_ID as string,",
				"          POL_ID as string,",
				"          LOCATION_KEY as integer,",
				"          LOSSDATE as timestamp,",
				"          TRN_STATUS_DESCRIPTION_EXT as integer,",
				"          TRANACTION_SUBTYPE as integer,",
				"          PMT_TYP_CODE_DESCRIPTION_EXT as string,",
				"          TRANSACTION_LINEITEM_DESCRIPTION as string,",
				"          TRANSACTION_COST_TYPE_DESCRIPTION as string,",
				"          TRANACTION_COSTTYPE as integer,",
				"          PAYMENT_TYPE_ID as integer,",
				"          PRIMARYCOVERAGE as integer,",
				"          COVERAGEKEY as string,",
				"          AGCY_KEY as integer,",
				"          AGNT_KEY as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> losstransactionView",
				"source(output(",
				"          POLICY_ID as integer,",
				"          SOURCE as string,",
				"          LAST_STATUS_ID as integer,",
				"          LAST_STATUS_PROC_DTS as timestamp,",
				"          LAST_STATUS_EFF_DATE as timestamp,",
				"          POLICY_KEY as string,",
				"          POLICY_NO as string,",
				"          POL_EFF_DATE as timestamp,",
				"          POL_EXP_DATE as timestamp,",
				"          ORIG_EFF_DATE as timestamp,",
				"          POL_YEAR as integer,",
				"          POL_FORM_CODE as string,",
				"          PRIM_STATE_CODE as string,",
				"          POL_TERM as string,",
				"          SIC_CODE as string,",
				"          NEW_BUS_FL as string,",
				"          ENTITY_TYPE_CODE as string,",
				"          BILL_PLAN_CODE as string,",
				"          PAY_PLAN_CODE as string,",
				"          AUDIT_PLAN_CODE as string,",
				"          ELECT_FUNDS_TFR_FL as string,",
				"          CLAIMS_MADE_FL as string,",
				"          RETRO_FL as string,",
				"          UNDERWRITER_CODE as string,",
				"          END_EFF_DATE as timestamp,",
				"          END_EXP_DATE as timestamp,",
				"          MOSTRECENTMODEL as boolean,",
				"          JOB_CREATETIME as timestamp,",
				"          JOB_REJECTREASONTEXT as string,",
				"          JOB_JOBNUMBER as string,",
				"          JOB_SUBMISSIONDATE as timestamp,",
				"          JOB_UPDATEUSERID as integer,",
				"          ISSUEDATE as timestamp,",
				"          CANCELLATIONDATE as timestamp,",
				"          HASAPPROVALORREJECTION as boolean,",
				"          UWISSUE_SHORTDESCRIPTION as string,",
				"          POLICY_STATUS_ID as integer,",
				"          POL_PERIOD_STATUS as integer,",
				"          BRANCHNAME as string,",
				"          UPDATE_USER_ID as integer,",
				"          UPDATE_USER as string,",
				"          JOB_RENEWALCODE as integer,",
				"          POLICYTYPE as integer,",
				"          POLICYSUFFIX as string,",
				"          ACCOUNTNUMBER as string,",
				"          UNDERWRITERGROUPTYPE as integer,",
				"          UNDERWRITINGGROUPNAME as integer,",
				"          RETENTION_TYPE as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FL as string,",
				"          JOB_RENEWALCODE_DESCRIPTION as string,",
				"          POL_PERIOD_STATUS_DESCRIPTION as string,",
				"          POLICYTYPE_DESCRIPTION as string,",
				"          UNDERWRITINGGROUPNAME_DESCRIPTION as string,",
				"          UNDERWRITERGROUPTYPE_DESCRIPTION as string,",
				"          POL_STATUS_DESCRIPTION as string,",
				"          ACCOUNTNAME as string,",
				"          POLICY_STATUS_DESC as string,",
				"          POLICY_REASON_DESC as string,",
				"          POLICY_SNAPSHOT_FLAG as string,",
				"          PRIMIUM_STATE_DESCRIPTION as string,",
				"          UNDERWRITER_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimPolicy",
				"source(output(",
				"          LOCATION_ID as integer,",
				"          LOCATION_KEY as string,",
				"          ETL_END_EFF_DATE as timestamp,",
				"          ETL_END_EXP_DATE as timestamp,",
				"          END_EFF_DATE as timestamp,",
				"          END_EXP_DATE as timestamp,",
				"          SOURCE as string,",
				"          LOCATION_NO as string,",
				"          STREET_1_NAME as string,",
				"          STREET_2_NAME as string,",
				"          STREET_3_NAME as string,",
				"          COUNTRY_CODE as string,",
				"          COUNTRY_TEXT as string,",
				"          REGION_CODE as string,",
				"          REGION_TEXT as string,",
				"          CITY_NAME as string,",
				"          POSTAL_CODE as string,",
				"          COUNTY_NAME as string,",
				"          ETL_ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimLocation",
				"source(output(",
				"          AGENCY_ID as integer,",
				"          AGENCY_KEY as string,",
				"          SOURCE as string,",
				"          AGENCY_CODE as string,",
				"          AGENCY_NAME as string,",
				"          AGENCY_ADDRESS_1 as string,",
				"          AGENCY_ADDRESS_2 as string,",
				"          AGENCY_ADDRESS_3 as string,",
				"          AGENCY_CITY as string,",
				"          AGENCY_STATE_CODE as string,",
				"          AGENCY_STATE_CODE_DESCRIPTION as string,",
				"          AGENCY_ZIP_CODE as string,",
				"          AGENCY_PHONE_NUMBER as string,",
				"          AGENCY_APPT_DATE as date,",
				"          AGENCY_TERM_DATE as date,",
				"          AGENCY_STATUS_CODE as string,",
				"          MANAGER_NAME as string,",
				"          REP_CODE as string,",
				"          REGION_CODE as string,",
				"          AGENCY_LIC_NUMBER as string,",
				"          AGENCY_TAX_ID as string,",
				"          ETL_ROW_EFF_DATETIMESTAMP as timestamp,",
				"          ETL_ROW_EXP_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ORGANIZATION_TYPE as integer,",
				"          ORGANIZATION_TYPE_DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimAgency",
				"source(output(",
				"          AGENT_ID as integer,",
				"          AGENT_KEY as string,",
				"          SOURCE as string,",
				"          AGENT_NAME as string,",
				"          AGENT_CODE as string,",
				"          AGENT_ADDRESS_1 as string,",
				"          AGENT_ADDRESS_2 as string,",
				"          AGENT_ADDRESS_3 as string,",
				"          AGENT_CITY as string,",
				"          AGENT_STATE_CODE as string,",
				"          AGENT_STATE_CODE_DESCRIPTION as string,",
				"          AGENT_ZIP_CODE as string,",
				"          AGENT_PHONE_NUMBER as string,",
				"          AGENT_APPT_DATE as date,",
				"          AGENT_TERM_DATE as date,",
				"          AGENT_STATUS_CODE as string,",
				"          MANAGER_NAME as string,",
				"          REP_CODE as string,",
				"          REGION_CODE as string,",
				"          AGENT_LIC_NUMBER as string,",
				"          AGENT_TAX_ID as string,",
				"          ETL_ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          PRODUCERGROUP_NAME as string,",
				"          BRANCHNAME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimAgent",
				"source(output(",
				"          COVERAGE_ID as integer,",
				"          COVERAGE_KEY as string,",
				"          ETL_ROW_EFF_DATETIMESTAMP as timestamp,",
				"          ETL_ROW_EXP_DATETIMESTAMP as timestamp,",
				"          ROW_PROC_DATETIMESTAMP as timestamp,",
				"          SOURCE as string,",
				"          COVERAGE_PART_CODE as string,",
				"          COVERAGE_PART_CODE_DESCRIPTION as string,",
				"          COVERAGE_CODE as string,",
				"          COVERAGE_CODE_DESCRIPTION as string,",
				"          ETL_CURR_ROW_FLAG as string,",
				"          ETL_LATE_ARRIVING_FLAG as string,",
				"          ETL_ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          COVERAGE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimCoverage",
				"source(output(",
				"          ORG_ID as integer,",
				"          SOURCE as string,",
				"          MASTER_CO_CD as string,",
				"          MASTER_CO_CD_DESC as string,",
				"          POL_CO_CD as string,",
				"          POL_CO_CD_DESC as string,",
				"          BRANCH_OFC_CD as string,",
				"          PROFIT_CTR_CD as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_TIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          UWCOMPANYNAME_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimOrganization",
				"source(output(",
				"          PRODUCT_ID as integer,",
				"          SOURCE as string,",
				"          LOB_CODE as string,",
				"          LOB_CODE_DESC as string,",
				"          LINE_DIV_CODE as string,",
				"          LINE_DIV_CODE_DESC as string,",
				"          PRODUCT_CODE as string,",
				"          PROG_CD as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimProduct",
				"source(output(",
				"          CLAIM_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_BASE_ID as integer,",
				"          CLAIM_KEY as string,",
				"          POL_KEY as string,",
				"          LAST_STATUS_ID as integer,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          CLAIM_NUMBER as string,",
				"          ROW_PROC_DATETIMESTAMP as timestamp,",
				"          LOSS_DATE as timestamp,",
				"          LOSS_YEAR as integer,",
				"          REPORTED_DATE as timestamp,",
				"          REPORTED_YEAR as integer,",
				"          SETUP_DATE as timestamp,",
				"          LOSS_TEXT as string,",
				"          EXAMINER_CODE as string,",
				"          EXAMINER_CODE_DESCRIPTION as string,",
				"          LOSS_CITY as string,",
				"          LOSS_STATE_CODE as string,",
				"          LOSS_STATE_CODE_DESCRIPTION as string,",
				"          LOSS_ZIP_CODE as string,",
				"          LOSS_TYPE_CODE as string,",
				"          LOSS_TYPE_CODE_DESCRIPTION as string,",
				"          CAUSE_OF_LOSS_CODE as string,",
				"          CAUSE_OF_LOSS_CODE_DESCRIPTION as string,",
				"          FAST_TRACK_FLAG as string,",
				"          CATASTROPHE_CODE as string,",
				"          CATASTROPHE_CODE_DESCRIPTION as string,",
				"          CATASTROPHE_DECLARE_DATE as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          CLAIM_ASSIGNMENTDATE as timestamp,",
				"          CLAIM_CLOSEDOUTCOME as integer,",
				"          CLAIM_CLAIMTIER as integer,",
				"          CLAIM_LITIGATIONSTATUS as integer,",
				"          CLAIM_SUBROGATIONSTATUS as integer,",
				"          SUPERVISORNAME as string,",
				"          LITIGATION_STARTDATE as timestamp,",
				"          CLAIM_ASSIGNEDNAME as string,",
				"          CLAIM_ASSIGNEDCITY as string,",
				"          CLAIM_ASSIGNEDSTATE as integer,",
				"          CLAIM_CLOSEDATE as timestamp,",
				"          CLAIM_REOPENDATE as timestamp,",
				"          CLAIM_ASSIGNEDUSERID as integer,",
				"          CLAIM_SUPERVISORID as integer,",
				"          SUB_UPDATEUSERID as integer,",
				"          SUB_UPDATEUSERNAME as string,",
				"          CLAIM_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          CLAIM_LITIGATIONSTATUS_DESCRIPTION as string,",
				"          CLAIM_SIESCALATESIU_DESCRIPTION as string,",
				"          CLAIM_STATE_DESCRIPTION as string,",
				"          CLAIM_SUBROGATIONSTATUS_DESCRIPTION as string,",
				"          EXT_ASSNDUSR_MAIL as string,",
				"          PREVIOUSUSERID as integer,",
				"          CLAIM_ASSIGNEDSTATE_NAME as string,",
				"          OPEN_DATE as timestamp,",
				"          CLAIM_ACTIVE_DAYS as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimClaim",
				"source(output(",
				"          CLAIM_FEATURE_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_KEY as string,",
				"          CLAIMANT_KEY as string,",
				"          FEATURE_KEY as string,",
				"          LAST_STATUS_ID as timestamp,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          COVERAGE_CODE as string,",
				"          FEATURE_SETUP_DATE as date,",
				"          FEATURE_REPORTED_DATE as date,",
				"          SUIT_FLAG as boolean,",
				"          ADJUSTER_CODE as string,",
				"          ETL_ROW_EFF_DATETIMESTAMP as timestamp,",
				"          ETL_ROW_EXPOSURE_DATETIMESTAMP as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          EXPOSURE_CLAIMANTTYPE as integer,",
				"          EXPOSURE_STATE as integer,",
				"          EXPOSURE_ASSIGNEDUSERID as integer,",
				"          EXPOSURE_PREVIOUSUSERID as integer,",
				"          COV_EXPOSURELIMIT as integer,",
				"          COV_SUBTYPE as integer,",
				"          CASENUMBER as string,",
				"          COV_TYPE as integer,",
				"          EVL_CREATETIME as timestamp,",
				"          NEG_DATE as timestamp,",
				"          NEG_TYPE as integer,",
				"          NEG_AMOUNT as integer,",
				"          EXPOSURE_ID as integer,",
				"          EXPOSURE_CREATETIME as timestamp,",
				"          EXPOSURE_CLOSEDATE as timestamp,",
				"          EXPOSURE_REOPENDATE as timestamp,",
				"          EXPOSURE_CLOSEDOUTCOME as integer,",
				"          EXPOSURE_SUPERVISORID as integer,",
				"          EXPOSURE_SUPERVISORNAME as string,",
				"          EXPOSURE_ASSIGNEDUSERNAME as string,",
				"          COVERAGE_EXPIREDDATE as timestamp,",
				"          MAT_SENTTODEFENSEDATE as timestamp,",
				"          EXPOSURE_TYPE as string,",
				"          COV_SUBTYPE_DESCRIPTION as string,",
				"          COV_TYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLAIMANTTYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          EXPOSURE_STATE_DESCRIPTION as string,",
				"          NEG_TYPE_DESCRIPTION as string,",
				"          EXT_FIRST_OFR_AMT as integer,",
				"          EXT_LAST_OFR_AMT as integer,",
				"          EXT_FIRST_DMD_AMT as integer,",
				"          EXT_LAST_DMD_AMT as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimClaimfeature",
				"losstransactionViewTrans, dimOrganization join(CC_TRANSACTIONLINEITEM_ID == ORG_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrg",
				"joinLosstransactionViewTransAndOrg, dimProduct join(CC_TRANSACTIONLINEITEM_ID == PRODUCT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProduct",
				"joinLosstransactionViewTransAndOrgAndProduct, dimPolicy join(CC_TRANSACTIONLINEITEM_ID == POLICY_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProductAndPolicy",
				"joinLosstransactionViewTransAndOrgAndProductAndPolicy, dimLocation join(CC_TRANSACTIONLINEITEM_ID == LOCATION_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocation",
				"joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocation, dimAgent join(CC_TRANSACTIONLINEITEM_ID == AGENT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgent",
				"joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgent, dimAgency join(CC_TRANSACTIONLINEITEM_ID == AGENCY_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgency",
				"joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgency, dimCoverage join(CC_TRANSACTIONLINEITEM_ID == COVERAGE_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverage",
				"joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverage, dimClaim join(CC_TRANSACTIONLINEITEM_ID == CLAIM_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverageAndClaim",
				"joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverageAndClaim, dimClaimfeature join(CC_TRANSACTIONLINEITEM_ID == CLAIM_FEATURE_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverageAndClaimAndClaimfeature",
				"losstransactionView derive(D_LOSSDATE = toString(LOSSDATE, 'yyyyMMdd')) ~> losstransactionViewTrans",
				"joinLosstransactionViewTransAndOrgAndProductAndPolicyAndLocationAndAgentAndAgencyAndCoverageAndClaimAndClaimfeature aggregate(groupBy(CLAIM_ID,",
				"          ACCOUNTING_PRDID,",
				"          POLICY_ID,",
				"          COVERAGE_ID,",
				"          AGENCY_ID,",
				"          LOCATION_ID,",
				"          AGENT_ID,",
				"          PRODUCT_ID),",
				"     CLAIM_FEATURE_CNT = count(CC_TRANSACTIONLINEITEM_ID)) ~> aggregation",
				"aggregation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          FACT_CLAIM_ACCT_ID as integer,",
				"          AGENCY_ID as integer,",
				"          LOCATION_ID as integer,",
				"          AGENT_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          COVERAGE_ID as integer,",
				"          POLICY_ID as integer,",
				"          REOPEN_DATE_ID as integer,",
				"          CLOSE_DATE_ID as integer,",
				"          OPEN_DATE_ID as integer,",
				"          CLAIM_ID as integer,",
				"          ACCTG_PRD_ID as integer,",
				"          CLAIM_FEATURE_CNT as integer,",
				"          ETL_ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          AGENCY_ID,",
				"          LOCATION_ID,",
				"          AGENT_ID,",
				"          PRODUCT_ID,",
				"          COVERAGE_ID,",
				"          POLICY_ID,",
				"          CLAIM_ID,",
				"          CLAIM_FEATURE_CNT",
				"     )) ~> factCLaimAcctMonth"
			]
		}
	}
}