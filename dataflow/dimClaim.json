{
	"name": "dimClaim",
	"properties": {
		"folder": {
			"name": "Insurance Analytics Azure/ccDimDataflows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CC_CLAIM",
						"type": "DatasetReference"
					},
					"name": "CcClaim"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_CATASTROPHE",
						"type": "DatasetReference"
					},
					"name": "CcCatastrophe"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_ADDRESS",
						"type": "DatasetReference"
					},
					"name": "CcAddress"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_GROUP",
						"type": "DatasetReference"
					},
					"name": "CcGroup"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_USER",
						"type": "DatasetReference"
					},
					"name": "CcUser"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_CONTACT",
						"type": "DatasetReference"
					},
					"name": "CcContact"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_POLICY",
						"type": "DatasetReference"
					},
					"name": "CcPolicy"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_CLAIMSTATE",
						"type": "DatasetReference"
					},
					"name": "CctlClaimState"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_STATE",
						"type": "DatasetReference"
					},
					"name": "CctlState"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_LITIGATIONSTATUS",
						"type": "DatasetReference"
					},
					"name": "CctlLitigationStatus"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_YESNO",
						"type": "DatasetReference"
					},
					"name": "CctlYesNo"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_LOSSTYPE",
						"type": "DatasetReference"
					},
					"name": "CctlLossType"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_ACTIVITYPATTERN",
						"type": "DatasetReference"
					},
					"name": "CcActivityPattern"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_CLAIM",
						"type": "DatasetReference"
					},
					"name": "TgtTbl"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DIM_CLAIM",
						"type": "DatasetReference"
					},
					"name": "insertedRows"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_CLAIM",
						"type": "DatasetReference"
					},
					"name": "updatedRows"
				}
			],
			"transformations": [
				{
					"name": "joinCcClaimaAndCcCatastrophe"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddress"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroup"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUser"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContact"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPolicy"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPolicyAndCctlClaimState"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAnd"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNo"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNoAndCctlLossType"
				},
				{
					"name": "joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNoAndCctlLossTypeAndCcActivityPattern"
				},
				{
					"name": "srcColumnTransformations"
				},
				{
					"name": "addColumns"
				},
				{
					"name": "SrcHashKey"
				},
				{
					"name": "lookupKeyColumn"
				},
				{
					"name": "TgtHashKey"
				},
				{
					"name": "split1"
				},
				{
					"name": "updateCondition"
				}
			],
			"scriptLines": [
				"source(output(",
				"          HazardousWaste as boolean,",
				"          SubrogationStatus as integer,",
				"          MMIdate as timestamp,",
				"          ReinsuranceReportable as boolean,",
				"          EmpSentMPNNotice as timestamp,",
				"          InsurerSentMPNNotice as timestamp,",
				"          SIEscalateSIU as integer,",
				"          StateFileNumber as string,",
				"          BeanVersion as integer,",
				"          StorageLocationState as integer,",
				"          Currency as integer,",
				"          Weather as integer,",
				"          SIEscalateSIUdate as timestamp,",
				"          LockingColumn as integer,",
				"          ReportedDate as timestamp,",
				"          PurgeDate as timestamp,",
				"          LargeLossNotificationStatus as integer,",
				"          OtherRecovStatus as integer,",
				"          SalvageStatus as integer,",
				"          LossLocationID as long,",
				"          SIUStatus as integer,",
				"          StorageCategory as integer,",
				"          JurisdictionState as integer,",
				"          ISOReceiveDate as timestamp,",
				"          FaultRating as integer,",
				"          PolicyID as long,",
				"          LossType as integer,",
				"          CloseDate as timestamp,",
				"          EmploymentInjury as boolean,",
				"          StorageType as integer,",
				"          DateFormRetByEmp as timestamp,",
				"          LocationOfTheft as integer,",
				"          ClosedOutcome as integer,",
				"          AssignmentDate as timestamp,",
				"          PreviousUserID as long,",
				"          ClaimTier as integer,",
				"          ReopenedReason as integer,",
				"          EmployerValidityReason as string,",
				"          AssignedByUserID as long,",
				"          PublicID as string,",
				"          LitigationStatus as integer,",
				"          DateEligibleForArchive as timestamp,",
				"          FlaggedReason as string,",
				"          LossCause as integer,",
				"          LossDate as timestamp,",
				"          InjuredRegularJob as boolean,",
				"          ClaimantDenormID as long,",
				"          Segment as integer,",
				"          ISOStatus as integer,",
				"          StorageVolumes as string,",
				"          AssignedGroupID as long,",
				"          UpdateUserID as long,",
				"          AssignedQueueID as long,",
				"          ExposureBegan as timestamp,",
				"          SIScore as integer,",
				"          Mold as boolean,",
				"          WorkloadUpdated as timestamp,",
				"          Strategy as integer,",
				"          CurrentConditions as boolean,",
				"          UpdateTime as timestamp,",
				"          LocationCodeID as long,",
				"          PTPinMPN as boolean,",
				"          HospitalDate as timestamp,",
				"          SupplementalWorkloadWeight as integer,",
				"          FurtherTreatment as boolean,",
				"          SafetyEquipUsed as boolean,",
				"          FlaggedDate as timestamp,",
				"          ReOpenDate as timestamp,",
				"          CreateTime as timestamp,",
				"          StateAckNumber as string,",
				"          StorageDate as timestamp,",
				"          LossLocationCode as string,",
				"          AgencyId as string,",
				"          Fault as decimal(4,1),",
				"          StatuteDate as timestamp,",
				"          ValidationLevel as integer,",
				"          ModifiedDutyAvail as boolean,",
				"          Retired as long,",
				"          HospitalDays as integer,",
				"          ExposureEnded as timestamp,",
				"          DateRptdToEmployer as timestamp,",
				"          DrugsInvolved as integer,",
				"          ISOKnown as boolean,",
				"          ComputerSecurity as boolean,",
				"          InjuredOnPremises as boolean,",
				"          ExaminationDate as timestamp,",
				"          DateRptdToInsured as timestamp,",
				"          AssignedUserID as long,",
				"          ReportedByType as integer,",
				"          ID as long,",
				"          CatastropheID as long,",
				"          DeathDate as timestamp,",
				"          PreviousQueueID as long,",
				"          SafetyEquipProv as boolean,",
				"          TreatedPatientBfr as boolean,",
				"          HowReported as integer,",
				"          DateCompDcsnDue as timestamp,",
				"          InsuredPremises as boolean,",
				"          MainContactType as integer,",
				"          StorageBarCodeNum as string,",
				"          ClaimNumber as string,",
				"          DiagnosticCnsistnt as boolean,",
				"          DateCompDcsnMade as timestamp,",
				"          DateFormGivenToEmp as timestamp,",
				"          Flagged as integer,",
				"          SIULifeCycleState as integer,",
				"          ClaimWorkCompID as long,",
				"          LOBCode as integer,",
				"          FireDeptInfo as string,",
				"          PreexDisblty as boolean,",
				"          InjWkrInMPN as timestamp,",
				"          IncidentReport as boolean,",
				"          BenefitsStatusDcsn as boolean,",
				"          ArchivePartition as long,",
				"          ConcurrentEmp as integer,",
				"          CreateUserID as long,",
				"          ShowMedicalFirstInfo as integer,",
				"          ISOSendDate as timestamp,",
				"          EmploymentDataID as long,",
				"          ISOEnabled as boolean,",
				"          FirstNoticeSuit as boolean,",
				"          AssignmentStatus as integer,",
				"          Description as string,",
				"          CoverageInQuestion as boolean,",
				"          ReinsuranceFlaggedStatus as integer,",
				"          AccidentType as integer,",
				"          LoadCommandID as long,",
				"          WorkloadWeight as integer,",
				"          PoliceDeptInfo as string,",
				"          ClaimSource as integer,",
				"          DateRptdToAgent as timestamp,",
				"          ManifestationDate as timestamp,",
				"          Progress as integer,",
				"          PermissionRequired as integer,",
				"          State as integer,",
				"          EmpQusValidity as integer,",
				"          StorageBoxNum as string,",
				"          ClaimantRprtdDate as timestamp,",
				"          InsuredDenormID as long,",
				"          WeatherRelated as boolean,",
				"          PreviousGroupID as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcClaim",
				"source(output(",
				"          TopLeftLatitude as decimal(7,5),",
				"          Retired as long,",
				"          Type as integer,",
				"          PublicID as string,",
				"          BottomRightLatitude as decimal(7,5),",
				"          PCSCatastropheNumber as string,",
				"          CreateUserID as long,",
				"          BottomRightLongitude as decimal(8,5),",
				"          CatastropheNumber as string,",
				"          ID as long,",
				"          BeanVersion as integer,",
				"          ScheduleBatch as boolean,",
				"          UpdateUserID as long,",
				"          PolicyEffectiveDate as timestamp,",
				"          Comments as string,",
				"          Description as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          CatastropheValidTo as timestamp,",
				"          TopLeftLongitude as decimal(8,5),",
				"          Name as string,",
				"          Active as boolean,",
				"          CreateTime as timestamp,",
				"          PolicyRetrievalSetTime as timestamp,",
				"          CatastropheValidFrom as timestamp,",
				"          PolicyRetrievalCompletionTime as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcCatastrophe",
				"source(output(",
				"          PostalCodeDenorm as string,",
				"          Retired as long,",
				"          AddressLine2Kanji as string,",
				"          PublicID as string,",
				"          BatchGeocode as boolean,",
				"          Admin as boolean,",
				"          ArchivePartition as long,",
				"          CreateUserID as long,",
				"          CEDEX as boolean,",
				"          ID as long,",
				"          CityKanji as string,",
				"          BeanVersion as integer,",
				"          AddressBookUID as string,",
				"          UpdateUserID as long,",
				"          Description as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          Country as integer,",
				"          City as string,",
				"          Subtype as integer,",
				"          ValidUntil as timestamp,",
				"          County as string,",
				"          PostalCode as string,",
				"          State as integer,",
				"          CityDenorm as string,",
				"          AddressLine1Kanji as string,",
				"          CreateTime as timestamp,",
				"          GeocodeStatus as integer,",
				"          AddressType as integer,",
				"          CEDEXBureau as string,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          AddressLine3 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcAddress",
				"source(output(",
				"          ValidationLevel as integer,",
				"          GroupType as integer,",
				"          LoadFactor as integer,",
				"          Retired as long,",
				"          OrganizationID as long,",
				"          UpdateTime as timestamp,",
				"          WorldVisible as boolean,",
				"          NameKanji as string,",
				"          PublicID as string,",
				"          Name as string,",
				"          SecurityZoneID as long,",
				"          CreateUserID as long,",
				"          CreateTime as timestamp,",
				"          ID as long,",
				"          SupervisorID as long,",
				"          BeanVersion as integer,",
				"          UpdateUserID as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcGroup",
				"source(output(",
				"          ValidationLevel as integer,",
				"          ExternalUser as boolean,",
				"          Retired as long,",
				"          OrganizationID as long,",
				"          VacationStatus as integer,",
				"          PublicID as string,",
				"          CreateUserID as long,",
				"          CredentialID as long,",
				"          DefaultCountry as integer,",
				"          ID as long,",
				"          BeanVersion as integer,",
				"          TimeZone as integer,",
				"          Department as string,",
				"          UpdateUserID as long,",
				"          PolicyType as integer,",
				"          DefaultPhoneCountry as integer,",
				"          UserSettingsID as long,",
				"          LoadCommandID as long,",
				"          ContactID as long,",
				"          AuthorityProfileID as long,",
				"          UpdateTime as timestamp,",
				"          Locale as integer,",
				"          ExperienceLevel as integer,",
				"          QuickClaim as integer,",
				"          CreateTime as timestamp,",
				"          LossType as integer,",
				"          SystemUserType as integer,",
				"          Language as integer,",
				"          NewlyAssignedActivities as integer,",
				"          JobTitle as string,",
				"          OffsetStatsUpdateTime as timestamp,",
				"          SessionTimeoutSecs as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcUser",
				"source(output(",
				"          ValidationLevel as integer,",
				"          LawFirmSpecialty as integer,",
				"          Retired as long,",
				"          FirstNameKanji as string,",
				"          EmailAddress2 as string,",
				"          SpecialtyType as integer,",
				"          EmailAddress1 as string,",
				"          LastName as string,",
				"          FaxPhoneExtension as string,",
				"          AutoSync as integer,",
				"          Admin as boolean,",
				"          HomePhone as string,",
				"          TaxID as string,",
				"          W9ReceivedDate as timestamp,",
				"          LicenseNumber as string,",
				"          PrimaryPhone as integer,",
				"          AdjudicatorLicense as string,",
				"          AutoRepairLicense as string,",
				"          AutoTowingLicense as string,",
				"          ID as long,",
				"          W9Received as boolean,",
				"          BeanVersion as integer,",
				"          PrimaryLocale as integer,",
				"          Score as integer,",
				"          NameDenorm as string,",
				"          AddressBookUID as string,",
				"          PrimaryLanguage as integer,",
				"          AttorneySpecialty as integer,",
				"          DoctorSpecialty as integer,",
				"          Suffix as integer,",
				"          FormerName as string,",
				"          NumDependents as integer,",
				"          Prefix as integer,",
				"          NameKanji as string,",
				"          HomePhoneCountry as integer,",
				"          TaxFilingStatus as integer,",
				"          Notes as string,",
				"          PolicySystemId as string,",
				"          DateOfBirth as timestamp,",
				"          Subtype as integer,",
				"          CellPhoneCountry as integer,",
				"          AdjudicativeDomain as integer,",
				"          CellPhone as string,",
				"          MedicalOrgSpecialty as integer,",
				"          Gender as integer,",
				"          FaxPhoneCountry as integer,",
				"          FaxPhone as string,",
				"          VendorNumber as string,",
				"          AttorneyLicense as string,",
				"          CellPhoneExtension as string,",
				"          VendorType as integer,",
				"          TaxStatus as integer,",
				"          EmployeeNumber as string,",
				"          WorkPhone as string,",
				"          NumDependentsU25 as integer,",
				"          HomePhoneExtension as string,",
				"          Particle as string,",
				"          PublicID as string,",
				"          ArchivePartition as long,",
				"          W9ValidTo as timestamp,",
				"          PendingLinkMessage as boolean,",
				"          CreateUserID as long,",
				"          Occupation as string,",
				"          LoadRelatedContacts as boolean,",
				"          VenueType as integer,",
				"          FirstName as string,",
				"          LastNameDenorm as string,",
				"          MaritalStatus as integer,",
				"          NumDependentsU18 as integer,",
				"          PrimaryAddressID as long,",
				"          FirstNameDenorm as string,",
				"          WorkPhoneCountry as integer,",
				"          UpdateUserID as long,",
				"          WorkPhoneExtension as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          LicenseState as integer,",
				"          Name as string,",
				"          PreferredCurrency as integer,",
				"          MedicalLicense as string,",
				"          MiddleName as string,",
				"          LastNameKanji as string,",
				"          WithholdingRate as decimal(4,1),",
				"          OrganizationType as integer,",
				"          CreateTime as timestamp,",
				"          W9ValidFrom as timestamp,",
				"          Preferred as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcContact",
				"source(output(",
				"          ValidationLevel as integer,",
				"          RetroactiveDate as timestamp,",
				"          OtherInsurance as boolean,",
				"          Retired as long,",
				"          CoverageForm as integer,",
				"          ForeignCoverage as boolean,",
				"          PolicySuffix as string,",
				"          PolicySource as integer,",
				"          EffectiveDate as timestamp,",
				"          PublicID as string,",
				"          OrigEffectiveDate as timestamp,",
				"          ArchivePartition as long,",
				"          ExpirationDate as timestamp,",
				"          CancellationDate as timestamp,",
				"          CustomerServiceTier as integer,",
				"          TotalProperties as integer,",
				"          CreateUserID as long,",
				"          AssignedRisk as boolean,",
				"          ID as long,",
				"          ProducerCode as string,",
				"          BeanVersion as integer,",
				"          InsuredSICCode as string,",
				"          Verified as boolean,",
				"          Currency as integer,",
				"          ReturnToWorkPrgm as boolean,",
				"          UpdateUserID as long,",
				"          PolicyType as integer,",
				"          UnderwritingCo as integer,",
				"          LoadCommandID as long,",
				"          AccountNumber as string,",
				"          WCOtherStates as string,",
				"          PolicyNumber as string,",
				"          UpdateTime as timestamp,",
				"          FinancialInterests as string,",
				"          Notes as string,",
				"          Status as integer,",
				"          PolicyRatingPlan as integer,",
				"          PolicySystemPeriodID as long,",
				"          WCStates as string,",
				"          Participation as decimal(4,1),",
				"          CreateTime as timestamp,",
				"          ReportingDate as timestamp,",
				"          TotalVehicles as integer,",
				"          OtherInsInfo as string,",
				"          UnderwritingGroup as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcPolicy",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CctlClaimState",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CctlState",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CctlLitigationStatus",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CctlYesNo",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CctlLossType",
				"source(output(",
				"          Command as string,",
				"          ExternallyOwned as boolean,",
				"          Retired as long,",
				"          Type as integer,",
				"          TargetDays as integer,",
				"          TargetIncludeDays as integer,",
				"          EscBusCalLocPath as string,",
				"          PublicID as string,",
				"          Code as string,",
				"          EscalationInclDays as integer,",
				"          DocumentTemplate as string,",
				"          EscalationBusCalTag as integer,",
				"          TargetHours as integer,",
				"          CreateUserID as long,",
				"          ShortSubject as string,",
				"          TargetBusCalLocPath as string,",
				"          ID as long,",
				"          BeanVersion as integer,",
				"          Importance as integer,",
				"          AutomatedOnly as boolean,",
				"          TargetBusCalTag as integer,",
				"          UpdateUserID as long,",
				"          Description as string,",
				"          ClaimLossType as integer,",
				"          Subject as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          ClosedClaimAvlble as boolean,",
				"          Priority as integer,",
				"          EmailTemplate as string,",
				"          EscalationHours as integer,",
				"          Category as integer,",
				"          EscalationStartPt as integer,",
				"          TargetStartPoint as integer,",
				"          CreateTime as timestamp,",
				"          Mandatory as boolean,",
				"          EscalationDays as integer,",
				"          ActivityClass as integer,",
				"          Recurring as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CcActivityPattern",
				"source(output(",
				"          CLAIM_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_BASE_ID as integer,",
				"          CLAIM_KEY as string,",
				"          POL_KEY as string,",
				"          LAST_STATUS_ID as integer,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          CLAIM_NUMBER as string,",
				"          ROW_PROC_DATETIMESTAMP as timestamp,",
				"          LOSS_DATE as timestamp,",
				"          LOSS_YEAR as integer,",
				"          REPORTED_DATE as timestamp,",
				"          REPORTED_YEAR as integer,",
				"          SETUP_DATE as timestamp,",
				"          LOSS_TEXT as string,",
				"          EXAMINER_CODE as string,",
				"          EXAMINER_CODE_DESCRIPTION as string,",
				"          LOSS_CITY as string,",
				"          LOSS_STATE_CODE as string,",
				"          LOSS_STATE_CODE_DESCRIPTION as string,",
				"          LOSS_ZIP_CODE as string,",
				"          LOSS_TYPE_CODE as string,",
				"          LOSS_TYPE_CODE_DESCRIPTION as string,",
				"          CAUSE_OF_LOSS_CODE as string,",
				"          CAUSE_OF_LOSS_CODE_DESCRIPTION as string,",
				"          FAST_TRACK_FLAG as string,",
				"          CATASTROPHE_CODE as string,",
				"          CATASTROPHE_CODE_DESCRIPTION as string,",
				"          CATASTROPHE_DECLARE_DATE as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          CLAIM_ASSIGNMENTDATE as timestamp,",
				"          CLAIM_CLOSEDOUTCOME as integer,",
				"          CLAIM_CLAIMTIER as integer,",
				"          CLAIM_LITIGATIONSTATUS as integer,",
				"          CLAIM_SUBROGATIONSTATUS as integer,",
				"          SUPERVISORNAME as string,",
				"          LITIGATION_STARTDATE as timestamp,",
				"          CLAIM_ASSIGNEDNAME as string,",
				"          CLAIM_ASSIGNEDCITY as string,",
				"          CLAIM_ASSIGNEDSTATE as integer,",
				"          CLAIM_CLOSEDATE as timestamp,",
				"          CLAIM_REOPENDATE as timestamp,",
				"          CLAIM_ASSIGNEDUSERID as integer,",
				"          CLAIM_SUPERVISORID as integer,",
				"          SUB_UPDATEUSERID as integer,",
				"          SUB_UPDATEUSERNAME as string,",
				"          CLAIM_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          CLAIM_LITIGATIONSTATUS_DESCRIPTION as string,",
				"          CLAIM_SIESCALATESIU_DESCRIPTION as string,",
				"          CLAIM_STATE_DESCRIPTION as string,",
				"          CLAIM_SUBROGATIONSTATUS_DESCRIPTION as string,",
				"          EXT_ASSNDUSR_MAIL as string,",
				"          PREVIOUSUSERID as integer,",
				"          CLAIM_ASSIGNEDSTATE_NAME as string,",
				"          OPEN_DATE as timestamp,",
				"          CLAIM_ACTIVE_DAYS as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> TgtTbl",
				"CcClaim, CcCatastrophe join(CcClaim@ID == CcCatastrophe@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastrophe",
				"joinCcClaimaAndCcCatastrophe, CcAddress join(CcClaim@ID == CcAddress@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddress",
				"joinCcClaimaAndCcCatastropheAndCcAddress, CcGroup join(CcClaim@ID == CcGroup@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroup",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroup, CcUser join(CcClaim@ID == CcUser@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUser",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUser, CcContact join(CcClaim@ID == CcContact@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContact",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContact, CcPolicy join(CcClaim@ID == CcPolicy@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPolicy",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPolicy, CctlClaimState join(CcClaim@ID == CctlClaimState@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPolicyAndCctlClaimState",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPolicyAndCctlClaimState, CctlLitigationStatus join(CcClaim@ID == CctlLitigationStatus@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAnd",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAnd, CctlYesNo join(CcClaim@ID == CctlYesNo@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNo",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNo, CctlLossType join(CcClaim@ID == CctlLossType@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNoAndCctlLossType",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNoAndCctlLossType, CcActivityPattern join(CcClaim@ID == CcActivityPattern@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'both')~> joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNoAndCctlLossTypeAndCcActivityPattern",
				"joinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupjoinCcClaimaAndCcCatastropheAndCcAddressAndCcGroupAndCcUserAndCcContactAndCcPoCctlLitigationStatuslicyAndCctlClaimStateAndCctlYesNoAndCctlLossTypeAndCcActivityPattern derive(Src_SOURCE = 'CC',",
				"          Src_CLAIM_KEY = concat('CC-',CcClaim@PublicID),",
				"          Src_LAST_STATUS_PROC_DATETIMESTAMP = currentTimestamp(),",
				"          Src_ROW_PROC_DATETIMESTAMP = currentTimestamp(),",
				"          Src_LOSS_YEAR = year(LossDate),",
				"          Src_REPORTED_YEAR = year(ReportedDate),",
				"          Src_FAST_TRACK_FLAG = 'Y',",
				"          Src_ETL_ADD_DATETIMESTAMP = currentTimestamp(),",
				"          Src_ETL_LAST_UPDATE_DATETIMESTAMP = currentTimestamp(),",
				"          Src_ETL_ACTIVE_FLAG = 'Y',",
				"          Src_CLAIM_ASSIGNMENTDATE = currentTimestamp(),",
				"          Src_LITIGATION_STARTDATE = currentTimestamp(),",
				"          Src_CLAIM_ASSIGNEDNAME = concat(FirstName,' ',LastName),",
				"          Src_CLAIM_ASSIGNEDUSERID = toInteger(AssignedUserID),",
				"          Src_CLAIM_SUBROGATIONSTATUS_DESCRIPTION = concat(toString(CctlYesNo@S_en_US),toString(SubrogationStatus))) ~> srcColumnTransformations",
				"srcColumnTransformations derive(Src_LOSS_STATE_CODE_DESCRIPTION = CcClaim@Description,",
				"          Src_LOSS_TEXT = CcClaim@Description,",
				"          Src_EXAMINER_CODE = Code,",
				"          Src_EXAMINER_CODE_DESCRIPTION = CcActivityPattern@Description,",
				"          Src_LOSS_CITY = City,",
				"          Src_LOSS_STATE_CODE = LossLocationCode,",
				"          Src_LOSS_ZIP_CODE = toString(LossLocationID),",
				"          Src_LOSS_TYPE_CODE = CctlLossType@TYPECODE,",
				"          Src_LOSS_TYPE_CODE_DESCRIPTION = CctlLossType@DESCRIPTION,",
				"          Src_CAUSE_OF_LOSS_CODE = CctlLossType@TYPECODE,",
				"          Src_CATASTROPHE_CODE = CatastropheNumber,",
				"          Src_CATASTROPHE_CODE_DESCRIPTION = CcCatastrophe@Description,",
				"          Src_CLAIM_CLOSEDOUTCOME = ClosedOutcome,",
				"          Src_CLAIM_CLAIMTIER = ClaimTier,",
				"          Src_CLAIM_LITIGATIONSTATUS = LitigationStatus,",
				"          Src_CLAIM_SUBROGATIONSTATUS = SubrogationStatus,",
				"          Src_CLAIM_ASSIGNEDCITY = City,",
				"          Src_CLAIM_ASSIGNEDSTATE = AssignmentStatus,",
				"          Src_CLAIM_SUPERVISORID = SupervisorID,",
				"          Src_SUB_UPDATEUSERID = CcClaim@UpdateUserID,",
				"          Src_SUB_UPDATEUSERNAME = FirstName,",
				"          Src_CLAIM_LITIGATIONSTATUS_DESCRIPTION = CcClaim@Description,",
				"          Src_EXT_ASSNDUSR_MAIL = EmailAddress1,",
				"          Src_PREVIOUSUSERID = SIEscalateSIU,",
				"          Src_CLAIM_ASSIGNEDSTATE_NAME = CctlClaimState@NAME,",
				"          Src_PolicySystemPeriodID = toString(PolicySystemPeriodID),",
				"          Src_CcClaimID = toInteger(CcClaim@ID),",
				"          Src_SETUP_DATE = CcClaim@CreateTime,",
				"          Src_OPEN_DATE = CcClaim@CreateTime) ~> addColumns",
				"addColumns derive(SrcHashKey = sha1(toString(Src_SOURCE),toString(CcClaim@ID),toString(Src_CLAIM_KEY),toString(PolicySystemPeriodID),toString(Status),\r",
				"toString(ClaimNumber),toString(Src_LOSS_TEXT),toString(Src_EXAMINER_CODE),toString(Src_EXAMINER_CODE_DESCRIPTION),\r",
				"toString(Src_LOSS_CITY),toString(Src_LOSS_STATE_CODE),toString(Src_LOSS_STATE_CODE_DESCRIPTION),\r",
				"toString(Src_LOSS_ZIP_CODE),toString(Src_LOSS_TYPE_CODE),toString(Src_LOSS_TYPE_CODE_DESCRIPTION),toString(Src_CAUSE_OF_LOSS_CODE),\r",
				"toString(Src_FAST_TRACK_FLAG),\r",
				"toString(Src_CATASTROPHE_CODE),toString(Src_CATASTROPHE_CODE_DESCRIPTION),\r",
				"toString(Src_CLAIM_CLOSEDOUTCOME),toString(Src_CLAIM_CLAIMTIER),toString(Src_CLAIM_LITIGATIONSTATUS),\r",
				"toString(Src_CLAIM_SUBROGATIONSTATUS),toString(Src_CLAIM_ASSIGNEDNAME),\r",
				"toString(Src_CLAIM_ASSIGNEDUSERID),toString(Src_CLAIM_SUPERVISORID),toString(Src_SUB_UPDATEUSERID),\r",
				"toString(Src_SUB_UPDATEUSERNAME),\r",
				"toString(Src_CLAIM_SUBROGATIONSTATUS_DESCRIPTION),\r",
				"toString(Src_EXT_ASSNDUSR_MAIL),\r",
				"toString(Src_PREVIOUSUSERID),\r",
				"toString(Src_CLAIM_ASSIGNEDSTATE_NAME))) ~> SrcHashKey",
				"SrcHashKey, TgtHashKey lookup(Src_CLAIM_KEY == CLAIM_KEY,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'both')~> lookupKeyColumn",
				"TgtTbl derive(TgtHashKey = sha1(toString(SOURCE),toString(CLAIM_BASE_ID),toString(CLAIM_KEY),toString(POL_KEY),toString(LAST_STATUS_ID),toString(CLAIM_NUMBER),\r",
				"toString(LOSS_TEXT),toString(EXAMINER_CODE),toString(EXAMINER_CODE_DESCRIPTION),toString(LOSS_CITY),toString(LOSS_STATE_CODE),\r",
				"toString(LOSS_STATE_CODE_DESCRIPTION),toString(LOSS_ZIP_CODE),toString(LOSS_TYPE_CODE),toString(LOSS_TYPE_CODE_DESCRIPTION),toString(CAUSE_OF_LOSS_CODE),\r",
				"toString(FAST_TRACK_FLAG),\r",
				"toString(CATASTROPHE_CODE),toString(CATASTROPHE_CODE_DESCRIPTION),\r",
				"toString(CLAIM_CLOSEDOUTCOME),toString(CLAIM_CLAIMTIER),toString(CLAIM_LITIGATIONSTATUS),\r",
				"toString(CLAIM_SUBROGATIONSTATUS),toString(CLAIM_ASSIGNEDNAME),\r",
				"toString(CLAIM_ASSIGNEDUSERID),toString(CLAIM_SUPERVISORID),toString(SUB_UPDATEUSERID),toString(SUB_UPDATEUSERNAME),\r",
				"toString(CLAIM_SUBROGATIONSTATUS_DESCRIPTION),\r",
				"toString(EXT_ASSNDUSR_MAIL),\r",
				"toString(PREVIOUSUSERID),\r",
				"toString(CLAIM_ASSIGNEDSTATE_NAME))) ~> TgtHashKey",
				"lookupKeyColumn split(isNull(CLAIM_KEY),",
				"     !isNull(CLAIM_KEY)&&notEquals(SrcHashKey,TgtHashKey),",
				"     disjoint: false) ~> split1@(Insert, Update, DoNothing)",
				"split1@Update alterRow(updateIf(true())) ~> updateCondition",
				"split1@Insert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CLAIM_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_BASE_ID as integer,",
				"          CLAIM_KEY as string,",
				"          POL_KEY as string,",
				"          LAST_STATUS_ID as integer,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          CLAIM_NUMBER as string,",
				"          ROW_PROC_DATETIMESTAMP as timestamp,",
				"          LOSS_DATE as timestamp,",
				"          LOSS_YEAR as integer,",
				"          REPORTED_DATE as timestamp,",
				"          REPORTED_YEAR as integer,",
				"          SETUP_DATE as timestamp,",
				"          LOSS_TEXT as string,",
				"          EXAMINER_CODE as string,",
				"          EXAMINER_CODE_DESCRIPTION as string,",
				"          LOSS_CITY as string,",
				"          LOSS_STATE_CODE as string,",
				"          LOSS_STATE_CODE_DESCRIPTION as string,",
				"          LOSS_ZIP_CODE as string,",
				"          LOSS_TYPE_CODE as string,",
				"          LOSS_TYPE_CODE_DESCRIPTION as string,",
				"          CAUSE_OF_LOSS_CODE as string,",
				"          CAUSE_OF_LOSS_CODE_DESCRIPTION as string,",
				"          FAST_TRACK_FLAG as string,",
				"          CATASTROPHE_CODE as string,",
				"          CATASTROPHE_CODE_DESCRIPTION as string,",
				"          CATASTROPHE_DECLARE_DATE as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          CLAIM_ASSIGNMENTDATE as timestamp,",
				"          CLAIM_CLOSEDOUTCOME as integer,",
				"          CLAIM_CLAIMTIER as integer,",
				"          CLAIM_LITIGATIONSTATUS as integer,",
				"          CLAIM_SUBROGATIONSTATUS as integer,",
				"          SUPERVISORNAME as string,",
				"          LITIGATION_STARTDATE as timestamp,",
				"          CLAIM_ASSIGNEDNAME as string,",
				"          CLAIM_ASSIGNEDCITY as string,",
				"          CLAIM_ASSIGNEDSTATE as integer,",
				"          CLAIM_CLOSEDATE as timestamp,",
				"          CLAIM_REOPENDATE as timestamp,",
				"          CLAIM_ASSIGNEDUSERID as integer,",
				"          CLAIM_SUPERVISORID as integer,",
				"          SUB_UPDATEUSERID as integer,",
				"          SUB_UPDATEUSERNAME as string,",
				"          CLAIM_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          CLAIM_LITIGATIONSTATUS_DESCRIPTION as string,",
				"          CLAIM_SIESCALATESIU_DESCRIPTION as string,",
				"          CLAIM_STATE_DESCRIPTION as string,",
				"          CLAIM_SUBROGATIONSTATUS_DESCRIPTION as string,",
				"          EXT_ASSNDUSR_MAIL as string,",
				"          PREVIOUSUSERID as integer,",
				"          CLAIM_ASSIGNEDSTATE_NAME as string,",
				"          OPEN_DATE as timestamp,",
				"          CLAIM_ACTIVE_DAYS as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SOURCE = Src_SOURCE,",
				"          CLAIM_BASE_ID = Src_CcClaimID,",
				"          CLAIM_KEY = Src_CLAIM_KEY,",
				"          POL_KEY = Src_PolicySystemPeriodID,",
				"          LAST_STATUS_ID = Status,",
				"          LAST_STATUS_PROC_DATETIMESTAMP = Src_LAST_STATUS_PROC_DATETIMESTAMP,",
				"          CLAIM_NUMBER = ClaimNumber,",
				"          ROW_PROC_DATETIMESTAMP = Src_ROW_PROC_DATETIMESTAMP,",
				"          LOSS_DATE = LossDate,",
				"          LOSS_YEAR = Src_LOSS_YEAR,",
				"          REPORTED_DATE = ReportedDate,",
				"          REPORTED_YEAR = Src_REPORTED_YEAR,",
				"          SETUP_DATE = Src_SETUP_DATE,",
				"          LOSS_TEXT = Src_LOSS_TEXT,",
				"          EXAMINER_CODE = Code,",
				"          EXAMINER_CODE_DESCRIPTION = Src_EXAMINER_CODE_DESCRIPTION,",
				"          LOSS_CITY = City,",
				"          LOSS_STATE_CODE = Src_LOSS_STATE_CODE,",
				"          LOSS_STATE_CODE_DESCRIPTION = Src_LOSS_STATE_CODE_DESCRIPTION,",
				"          LOSS_ZIP_CODE = Src_LOSS_ZIP_CODE,",
				"          LOSS_TYPE_CODE = Src_LOSS_TYPE_CODE,",
				"          LOSS_TYPE_CODE_DESCRIPTION = Src_LOSS_TYPE_CODE_DESCRIPTION,",
				"          CAUSE_OF_LOSS_CODE = Src_CAUSE_OF_LOSS_CODE,",
				"          CLAIM_ASSIGNEDSTATE = Src_CLAIM_ASSIGNEDSTATE,",
				"          FAST_TRACK_FLAG = Src_FAST_TRACK_FLAG,",
				"          CATASTROPHE_CODE = Src_CATASTROPHE_CODE,",
				"          CATASTROPHE_CODE_DESCRIPTION = Src_CATASTROPHE_CODE_DESCRIPTION,",
				"          CATASTROPHE_DECLARE_DATE = CatastropheValidTo,",
				"          ETL_ADD_DATETIMESTAMP = Src_ETL_ADD_DATETIMESTAMP,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP = Src_ETL_LAST_UPDATE_DATETIMESTAMP,",
				"          ETL_ACTIVE_FLAG = Src_ETL_ACTIVE_FLAG,",
				"          CLAIM_ASSIGNMENTDATE = Src_CLAIM_ASSIGNMENTDATE,",
				"          CLAIM_CLOSEDOUTCOME = Src_CLAIM_CLOSEDOUTCOME,",
				"          CLAIM_CLAIMTIER = ClaimTier,",
				"          CLAIM_LITIGATIONSTATUS = Src_CLAIM_LITIGATIONSTATUS,",
				"          CLAIM_SUBROGATIONSTATUS = Src_CLAIM_SUBROGATIONSTATUS,",
				"          LITIGATION_STARTDATE = Src_LITIGATION_STARTDATE,",
				"          CLAIM_ASSIGNEDNAME = Src_CLAIM_ASSIGNEDNAME,",
				"          CLAIM_ASSIGNEDCITY = Src_CLAIM_ASSIGNEDCITY,",
				"          CLAIM_ASSIGNEDSTATE = Src_CLAIM_ASSIGNEDSTATE,",
				"          CLAIM_CLOSEDATE = CloseDate,",
				"          CLAIM_REOPENDATE = ReportedDate,",
				"          CLAIM_ASSIGNEDUSERID = Src_CLAIM_ASSIGNEDUSERID,",
				"          CLAIM_SUPERVISORID = Src_CLAIM_SUPERVISORID,",
				"          SUB_UPDATEUSERID = Src_SUB_UPDATEUSERID,",
				"          SUB_UPDATEUSERNAME = Src_SUB_UPDATEUSERNAME,",
				"          CLAIM_LITIGATIONSTATUS_DESCRIPTION = Src_CLAIM_LITIGATIONSTATUS_DESCRIPTION,",
				"          CLAIM_SUBROGATIONSTATUS_DESCRIPTION = Src_CLAIM_SUBROGATIONSTATUS_DESCRIPTION,",
				"          EXT_ASSNDUSR_MAIL = Src_EXT_ASSNDUSR_MAIL,",
				"          PREVIOUSUSERID = Src_PREVIOUSUSERID,",
				"          CLAIM_ASSIGNEDSTATE_NAME = Src_CLAIM_ASSIGNEDSTATE_NAME,",
				"          OPEN_DATE = Src_OPEN_DATE",
				"     )) ~> insertedRows",
				"updateCondition sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CLAIM_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_BASE_ID as integer,",
				"          CLAIM_KEY as string,",
				"          POL_KEY as string,",
				"          LAST_STATUS_ID as integer,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          CLAIM_NUMBER as string,",
				"          ROW_PROC_DATETIMESTAMP as timestamp,",
				"          LOSS_DATE as timestamp,",
				"          LOSS_YEAR as integer,",
				"          REPORTED_DATE as timestamp,",
				"          REPORTED_YEAR as integer,",
				"          SETUP_DATE as timestamp,",
				"          LOSS_TEXT as string,",
				"          EXAMINER_CODE as string,",
				"          EXAMINER_CODE_DESCRIPTION as string,",
				"          LOSS_CITY as string,",
				"          LOSS_STATE_CODE as string,",
				"          LOSS_STATE_CODE_DESCRIPTION as string,",
				"          LOSS_ZIP_CODE as string,",
				"          LOSS_TYPE_CODE as string,",
				"          LOSS_TYPE_CODE_DESCRIPTION as string,",
				"          CAUSE_OF_LOSS_CODE as string,",
				"          CAUSE_OF_LOSS_CODE_DESCRIPTION as string,",
				"          FAST_TRACK_FLAG as string,",
				"          CATASTROPHE_CODE as string,",
				"          CATASTROPHE_CODE_DESCRIPTION as string,",
				"          CATASTROPHE_DECLARE_DATE as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          CLAIM_ASSIGNMENTDATE as timestamp,",
				"          CLAIM_CLOSEDOUTCOME as integer,",
				"          CLAIM_CLAIMTIER as integer,",
				"          CLAIM_LITIGATIONSTATUS as integer,",
				"          CLAIM_SUBROGATIONSTATUS as integer,",
				"          SUPERVISORNAME as string,",
				"          LITIGATION_STARTDATE as timestamp,",
				"          CLAIM_ASSIGNEDNAME as string,",
				"          CLAIM_ASSIGNEDCITY as string,",
				"          CLAIM_ASSIGNEDSTATE as integer,",
				"          CLAIM_CLOSEDATE as timestamp,",
				"          CLAIM_REOPENDATE as timestamp,",
				"          CLAIM_ASSIGNEDUSERID as integer,",
				"          CLAIM_SUPERVISORID as integer,",
				"          SUB_UPDATEUSERID as integer,",
				"          SUB_UPDATEUSERNAME as string,",
				"          CLAIM_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          CLAIM_LITIGATIONSTATUS_DESCRIPTION as string,",
				"          CLAIM_SIESCALATESIU_DESCRIPTION as string,",
				"          CLAIM_STATE_DESCRIPTION as string,",
				"          CLAIM_SUBROGATIONSTATUS_DESCRIPTION as string,",
				"          EXT_ASSNDUSR_MAIL as string,",
				"          PREVIOUSUSERID as integer,",
				"          CLAIM_ASSIGNEDSTATE_NAME as string,",
				"          OPEN_DATE as timestamp,",
				"          CLAIM_ACTIVE_DAYS as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['CLAIM_KEY'],",
				"     skipKeyWrites:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SOURCE = Src_SOURCE,",
				"          CLAIM_BASE_ID = Src_CcClaimID,",
				"          CLAIM_KEY = Src_CLAIM_KEY,",
				"          POL_KEY = Src_PolicySystemPeriodID,",
				"          LAST_STATUS_ID = Status,",
				"          LAST_STATUS_PROC_DATETIMESTAMP = Src_LAST_STATUS_PROC_DATETIMESTAMP,",
				"          CLAIM_NUMBER = ClaimNumber,",
				"          ROW_PROC_DATETIMESTAMP = Src_ROW_PROC_DATETIMESTAMP,",
				"          LOSS_DATE = LossDate,",
				"          LOSS_YEAR = Src_LOSS_YEAR,",
				"          REPORTED_DATE = ReportedDate,",
				"          REPORTED_YEAR = Src_REPORTED_YEAR,",
				"          SETUP_DATE = Src_SETUP_DATE,",
				"          LOSS_TEXT = Src_LOSS_TEXT,",
				"          EXAMINER_CODE = Code,",
				"          EXAMINER_CODE_DESCRIPTION = Src_EXAMINER_CODE_DESCRIPTION,",
				"          LOSS_CITY = City,",
				"          LOSS_STATE_CODE = Src_LOSS_STATE_CODE,",
				"          LOSS_STATE_CODE_DESCRIPTION = Src_LOSS_STATE_CODE_DESCRIPTION,",
				"          LOSS_ZIP_CODE = Src_LOSS_ZIP_CODE,",
				"          LOSS_TYPE_CODE = Src_LOSS_TYPE_CODE,",
				"          LOSS_TYPE_CODE_DESCRIPTION = Src_LOSS_TYPE_CODE_DESCRIPTION,",
				"          CAUSE_OF_LOSS_CODE = Src_CAUSE_OF_LOSS_CODE,",
				"          CLAIM_ASSIGNEDSTATE = Src_CLAIM_ASSIGNEDSTATE,",
				"          FAST_TRACK_FLAG = Src_FAST_TRACK_FLAG,",
				"          CATASTROPHE_CODE = Src_CATASTROPHE_CODE,",
				"          CATASTROPHE_CODE_DESCRIPTION = Src_CATASTROPHE_CODE_DESCRIPTION,",
				"          CATASTROPHE_DECLARE_DATE = CatastropheValidTo,",
				"          ETL_ADD_DATETIMESTAMP = Src_ETL_ADD_DATETIMESTAMP,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP = Src_ETL_LAST_UPDATE_DATETIMESTAMP,",
				"          ETL_ACTIVE_FLAG = Src_ETL_ACTIVE_FLAG,",
				"          CLAIM_ASSIGNMENTDATE = Src_CLAIM_ASSIGNMENTDATE,",
				"          CLAIM_CLOSEDOUTCOME = Src_CLAIM_CLOSEDOUTCOME,",
				"          CLAIM_CLAIMTIER = ClaimTier,",
				"          CLAIM_LITIGATIONSTATUS = Src_CLAIM_LITIGATIONSTATUS,",
				"          CLAIM_SUBROGATIONSTATUS = Src_CLAIM_SUBROGATIONSTATUS,",
				"          LITIGATION_STARTDATE = Src_LITIGATION_STARTDATE,",
				"          CLAIM_ASSIGNEDNAME = Src_CLAIM_ASSIGNEDNAME,",
				"          CLAIM_ASSIGNEDCITY = Src_CLAIM_ASSIGNEDCITY,",
				"          CLAIM_ASSIGNEDSTATE = Src_CLAIM_ASSIGNEDSTATE,",
				"          CLAIM_CLOSEDATE = CloseDate,",
				"          CLAIM_REOPENDATE = ReportedDate,",
				"          CLAIM_ASSIGNEDUSERID = Src_CLAIM_ASSIGNEDUSERID,",
				"          CLAIM_ASSIGNEDUSERID = Src_CLAIM_ASSIGNEDUSERID,",
				"          CLAIM_SUPERVISORID = Src_CLAIM_SUPERVISORID,",
				"          SUB_UPDATEUSERID = Src_SUB_UPDATEUSERID,",
				"          SUB_UPDATEUSERNAME = Src_SUB_UPDATEUSERNAME,",
				"          CLAIM_LITIGATIONSTATUS_DESCRIPTION = Src_CLAIM_LITIGATIONSTATUS_DESCRIPTION,",
				"          CLAIM_SUBROGATIONSTATUS_DESCRIPTION = Src_CLAIM_SUBROGATIONSTATUS_DESCRIPTION,",
				"          EXT_ASSNDUSR_MAIL = Src_EXT_ASSNDUSR_MAIL,",
				"          PREVIOUSUSERID = Src_PREVIOUSUSERID,",
				"          CLAIM_ASSIGNEDSTATE_NAME = Src_CLAIM_ASSIGNEDSTATE_NAME,",
				"          OPEN_DATE = Src_OPEN_DATE",
				"     )) ~> updatedRows"
			]
		}
	}
}