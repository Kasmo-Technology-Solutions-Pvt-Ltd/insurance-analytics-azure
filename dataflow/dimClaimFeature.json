{
	"name": "dimClaimFeature",
	"properties": {
		"folder": {
			"name": "Insurance Analytics Azure/ccDimDataflows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CC_CLAIM",
						"type": "DatasetReference"
					},
					"name": "ccClaim"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_CONTACT",
						"type": "DatasetReference"
					},
					"name": "ccContact"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_CLAIMINDICATOR",
						"type": "DatasetReference"
					},
					"name": "ccClaimindicator"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_EXPOSURE",
						"type": "DatasetReference"
					},
					"name": "ccExposure"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_COVERAGETYPE",
						"type": "DatasetReference"
					},
					"name": "ccCoveragetype"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_MATTER",
						"type": "DatasetReference"
					},
					"name": "ccMatter"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_NEGOTIATIONLINE",
						"type": "DatasetReference"
					},
					"name": "ccNegotiationonline"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_COVERAGETYPE",
						"type": "DatasetReference"
					},
					"name": "cctlCoveragetype"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_EXPOSURETYPE",
						"type": "DatasetReference"
					},
					"name": "CctlExposuretype"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_GROUP",
						"type": "DatasetReference"
					},
					"name": "ccGroup"
				},
				{
					"dataset": {
						"referenceName": "DS_DW_DIM_CLAIM_FEATURE",
						"type": "DatasetReference"
					},
					"name": "tgtDimClaimFeature"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DW_DIM_CLAIM_FEATURE",
						"type": "DatasetReference"
					},
					"name": "insertedRows"
				},
				{
					"dataset": {
						"referenceName": "DS_DW_DIM_CLAIM_FEATURE",
						"type": "DatasetReference"
					},
					"name": "updatedRows"
				}
			],
			"transformations": [
				{
					"name": "joinCcClaimandCcContact"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATOR"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSURE"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGE"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTER"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINE"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPE"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPEandCcEXPOSURETYPE"
				},
				{
					"name": "joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPEandCcEXPOSURETYPEandCcGroup"
				},
				{
					"name": "columnTransformations"
				},
				{
					"name": "srcHashKey"
				},
				{
					"name": "tgtHashKey"
				},
				{
					"name": "lookupKeyColumn"
				},
				{
					"name": "split1"
				},
				{
					"name": "updateCondition"
				}
			],
			"scriptLines": [
				"source(output(",
				"          HazardousWaste as boolean,",
				"          SubrogationStatus as integer,",
				"          MMIdate as timestamp,",
				"          ReinsuranceReportable as boolean,",
				"          EmpSentMPNNotice as timestamp,",
				"          InsurerSentMPNNotice as timestamp,",
				"          SIEscalateSIU as integer,",
				"          StateFileNumber as string,",
				"          BeanVersion as integer,",
				"          StorageLocationState as integer,",
				"          Currency as integer,",
				"          Weather as integer,",
				"          SIEscalateSIUdate as timestamp,",
				"          LockingColumn as integer,",
				"          ReportedDate as timestamp,",
				"          PurgeDate as timestamp,",
				"          LargeLossNotificationStatus as integer,",
				"          OtherRecovStatus as integer,",
				"          SalvageStatus as integer,",
				"          LossLocationID as long,",
				"          SIUStatus as integer,",
				"          StorageCategory as integer,",
				"          JurisdictionState as integer,",
				"          ISOReceiveDate as timestamp,",
				"          FaultRating as integer,",
				"          PolicyID as long,",
				"          LossType as integer,",
				"          CloseDate as timestamp,",
				"          EmploymentInjury as boolean,",
				"          StorageType as integer,",
				"          DateFormRetByEmp as timestamp,",
				"          LocationOfTheft as integer,",
				"          ClosedOutcome as integer,",
				"          AssignmentDate as timestamp,",
				"          PreviousUserID as long,",
				"          ClaimTier as integer,",
				"          ReopenedReason as integer,",
				"          EmployerValidityReason as string,",
				"          AssignedByUserID as long,",
				"          PublicID as string,",
				"          LitigationStatus as integer,",
				"          DateEligibleForArchive as timestamp,",
				"          FlaggedReason as string,",
				"          LossCause as integer,",
				"          LossDate as timestamp,",
				"          InjuredRegularJob as boolean,",
				"          ClaimantDenormID as long,",
				"          Segment as integer,",
				"          ISOStatus as integer,",
				"          StorageVolumes as string,",
				"          AssignedGroupID as long,",
				"          UpdateUserID as long,",
				"          AssignedQueueID as long,",
				"          ExposureBegan as timestamp,",
				"          SIScore as integer,",
				"          Mold as boolean,",
				"          WorkloadUpdated as timestamp,",
				"          Strategy as integer,",
				"          CurrentConditions as boolean,",
				"          UpdateTime as timestamp,",
				"          LocationCodeID as long,",
				"          PTPinMPN as boolean,",
				"          HospitalDate as timestamp,",
				"          SupplementalWorkloadWeight as integer,",
				"          FurtherTreatment as boolean,",
				"          SafetyEquipUsed as boolean,",
				"          FlaggedDate as timestamp,",
				"          ReOpenDate as timestamp,",
				"          CreateTime as timestamp,",
				"          StateAckNumber as string,",
				"          StorageDate as timestamp,",
				"          LossLocationCode as string,",
				"          AgencyId as string,",
				"          Fault as decimal(4,1),",
				"          StatuteDate as timestamp,",
				"          ValidationLevel as integer,",
				"          ModifiedDutyAvail as boolean,",
				"          Retired as long,",
				"          HospitalDays as integer,",
				"          ExposureEnded as timestamp,",
				"          DateRptdToEmployer as timestamp,",
				"          DrugsInvolved as integer,",
				"          ISOKnown as boolean,",
				"          ComputerSecurity as boolean,",
				"          InjuredOnPremises as boolean,",
				"          ExaminationDate as timestamp,",
				"          DateRptdToInsured as timestamp,",
				"          AssignedUserID as long,",
				"          ReportedByType as integer,",
				"          ID as long,",
				"          CatastropheID as long,",
				"          DeathDate as timestamp,",
				"          PreviousQueueID as long,",
				"          SafetyEquipProv as boolean,",
				"          TreatedPatientBfr as boolean,",
				"          HowReported as integer,",
				"          DateCompDcsnDue as timestamp,",
				"          InsuredPremises as boolean,",
				"          MainContactType as integer,",
				"          StorageBarCodeNum as string,",
				"          ClaimNumber as string,",
				"          DiagnosticCnsistnt as boolean,",
				"          DateCompDcsnMade as timestamp,",
				"          DateFormGivenToEmp as timestamp,",
				"          Flagged as integer,",
				"          SIULifeCycleState as integer,",
				"          ClaimWorkCompID as long,",
				"          LOBCode as integer,",
				"          FireDeptInfo as string,",
				"          PreexDisblty as boolean,",
				"          InjWkrInMPN as timestamp,",
				"          IncidentReport as boolean,",
				"          BenefitsStatusDcsn as boolean,",
				"          ArchivePartition as long,",
				"          ConcurrentEmp as integer,",
				"          CreateUserID as long,",
				"          ShowMedicalFirstInfo as integer,",
				"          ISOSendDate as timestamp,",
				"          EmploymentDataID as long,",
				"          ISOEnabled as boolean,",
				"          FirstNoticeSuit as boolean,",
				"          AssignmentStatus as integer,",
				"          Description as string,",
				"          CoverageInQuestion as boolean,",
				"          ReinsuranceFlaggedStatus as integer,",
				"          AccidentType as integer,",
				"          LoadCommandID as long,",
				"          WorkloadWeight as integer,",
				"          PoliceDeptInfo as string,",
				"          ClaimSource as integer,",
				"          DateRptdToAgent as timestamp,",
				"          ManifestationDate as timestamp,",
				"          Progress as integer,",
				"          PermissionRequired as integer,",
				"          State as integer,",
				"          EmpQusValidity as integer,",
				"          StorageBoxNum as string,",
				"          ClaimantRprtdDate as timestamp,",
				"          InsuredDenormID as long,",
				"          WeatherRelated as boolean,",
				"          PreviousGroupID as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccClaim",
				"source(output(",
				"          PostalCodeDenorm as string,",
				"          Retired as long,",
				"          AddressLine2Kanji as string,",
				"          PublicID as string,",
				"          BatchGeocode as boolean,",
				"          Admin as boolean,",
				"          ArchivePartition as long,",
				"          CreateUserID as long,",
				"          CEDEX as boolean,",
				"          ID as long,",
				"          CityKanji as string,",
				"          BeanVersion as integer,",
				"          AddressBookUID as string,",
				"          UpdateUserID as long,",
				"          Description as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          Country as integer,",
				"          City as string,",
				"          Subtype as integer,",
				"          ValidUntil as timestamp,",
				"          County as string,",
				"          PostalCode as string,",
				"          State as integer,",
				"          CityDenorm as string,",
				"          AddressLine1Kanji as string,",
				"          CreateTime as timestamp,",
				"          GeocodeStatus as integer,",
				"          AddressType as integer,",
				"          CEDEXBureau as string,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          AddressLine3 as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccContact",
				"source(output(",
				"          Retired as long,",
				"          ClaimID as long,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          NetTotalIncurred as decimal(18,2),",
				"          PublicID as string,",
				"          ArchivePartition as long,",
				"          Subtype as integer,",
				"          CreateUserID as long,",
				"          WhenOn as timestamp,",
				"          CreateTime as timestamp,",
				"          ID as long,",
				"          BeanVersion as integer,",
				"          IsOn as boolean,",
				"          UpdateUserID as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccClaimindicator",
				"source(output(",
				"          IncidentID as long,",
				"          SSDIEligible as boolean,",
				"          StatLineID as long,",
				"          CompBenefitsID as long,",
				"          DisBenefitsID as long,",
				"          CoverageID as long,",
				"          BeanVersion as integer,",
				"          IncidentLimitReached as boolean,",
				"          LostPropertyType as integer,",
				"          SSDIBenefitsID as long,",
				"          WCPreexDisbltyInfo as string,",
				"          LossParty as integer,",
				"          JurisdictionState as integer,",
				"          ClaimantType as integer,",
				"          WageStmtSent as timestamp,",
				"          ISOReceiveDate as timestamp,",
				"          LossCategory as integer,",
				"          OtherCoverageInfo as string,",
				"          SettleDate as timestamp,",
				"          CloseDate as timestamp,",
				"          ClosedOutcome as integer,",
				"          AssignmentDate as timestamp,",
				"          ContactPermitted as boolean,",
				"          PreviousUserID as long,",
				"          ReopenedReason as integer,",
				"          AssignedByUserID as long,",
				"          PublicID as string,",
				"          ClaimOrder as integer,",
				"          NewEmpDataID as long,",
				"          ClaimantDenormID as long,",
				"          WCPreexDisblty as boolean,",
				"          Segment as integer,",
				"          ISOStatus as integer,",
				"          CoverageSubType as integer,",
				"          PrimaryCoverage as integer,",
				"          AssignedGroupID as long,",
				"          DepreciatedValue as decimal(18,2),",
				"          UpdateUserID as long,",
				"          AssignedQueueID as long,",
				"          DeathBenefitsID as long,",
				"          ClaimID as long,",
				"          WorkloadUpdated as timestamp,",
				"          PIPDeathBenefitsID as long,",
				"          Strategy as integer,",
				"          CurrentConditions as boolean,",
				"          UpdateTime as timestamp,",
				"          LifePensionBenefitsID as long,",
				"          BreakIn as boolean,",
				"          TempLocationID as long,",
				"          SecurityLevel as integer,",
				"          HospitalDate as timestamp,",
				"          SupplementalWorkloadWeight as integer,",
				"          FurtherTreatment as boolean,",
				"          PriorEmpDataID as long,",
				"          ReOpenDate as timestamp,",
				"          SSBenefit as boolean,",
				"          CreateTime as timestamp,",
				"          TTDBenefitsID as long,",
				"          WageStmtRecd as timestamp,",
				"          OtherCoverage as boolean,",
				"          ValidationLevel as integer,",
				"          Retired as long,",
				"          HospitalDays as integer,",
				"          ISOKnown as boolean,",
				"          ExaminationDate as timestamp,",
				"          DaysInWeek as integer,",
				"          ExposureLimitReached as boolean,",
				"          AssignedUserID as long,",
				"          ID as long,",
				"          RIAgreementGroupID as long,",
				"          PreviousQueueID as long,",
				"          TreatedPatientBfr as boolean,",
				"          PPDBenefitsID as long,",
				"          AverageWeeklyWages as decimal(18,2),",
				"          WageBenefit as boolean,",
				"          PIPNonMedAggLimitReached as boolean,",
				"          WCBenefit as boolean,",
				"          PTDBenefitsID as long,",
				"          WCBenefitsID as long,",
				"          RSBenefitsID as long,",
				"          TPDBenefitsID as long,",
				"          DiagnosticCnsistnt as boolean,",
				"          PIPVocBenefitsID as long,",
				"          MetricLimitGeneration as integer,",
				"          Locked as boolean,",
				"          OtherCovgChoice as integer,",
				"          SettleMethod as integer,",
				"          PIPPersonAggLimitReached as boolean,",
				"          ReplacementValue as decimal(18,2),",
				"          ArchivePartition as long,",
				"          CreateUserID as long,",
				"          RIGroupSetExternally as boolean,",
				"          ISOSendDate as timestamp,",
				"          AssignmentStatus as integer,",
				"          PIPESSLimitReached as boolean,",
				"          LoadCommandID as long,",
				"          WorkloadWeight as integer,",
				"          Progress as integer,",
				"          VocBenefitsID as long,",
				"          State as integer,",
				"          ExposureType as integer,",
				"          ExposureTier as integer,",
				"          LastDayWorked as timestamp,",
				"          PIPClaimAggLimitReached as boolean,",
				"          PreviousGroupID as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccExposure",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccCoveragetype",
				"source(output(",
				"          ValidationLevel as integer,",
				"          FilingDate as timestamp,",
				"          Retired as long,",
				"          Arbitration as boolean,",
				"          FirstNotice as boolean,",
				"          SuitType as integer,",
				"          PunitiveAmount as decimal(18,2),",
				"          Room as string,",
				"          FinalSettleCost as decimal(18,2),",
				"          PunitiveDamages as boolean,",
				"          CourtType as integer,",
				"          AssignedUserID as long,",
				"          ID as long,",
				"          MediationDate as timestamp,",
				"          BeanVersion as integer,",
				"          CaseNumber as string,",
				"          PreviousQueueID as long,",
				"          SentToDefenseDate as timestamp,",
				"          ArbitrationDate as timestamp,",
				"          FileDate as timestamp,",
				"          StructuredSettle as boolean,",
				"          AdDamnumAmount as decimal(18,2),",
				"          HearingDate as timestamp,",
				"          FinalSettleDate as timestamp,",
				"          ResponseDue as timestamp,",
				"          AdDamnumSpecified as boolean,",
				"          ArbitrationRoom as string,",
				"          CloseDate as timestamp,",
				"          TrialDate as timestamp,",
				"          MatterType as integer,",
				"          MatterCaseNumber as string,",
				"          ServiceDate as timestamp,",
				"          AssignmentDate as timestamp,",
				"          PreviousUserID as long,",
				"          SubroRelated as boolean,",
				"          RiskType as integer,",
				"          ReopenedReason as integer,",
				"          DefenseApptDate as timestamp,",
				"          MediationRoom as string,",
				"          AssignedByUserID as long,",
				"          PublicID as string,",
				"          SubrogationSummaryID as long,",
				"          ArchivePartition as long,",
				"          CreateUserID as long,",
				"          MotionSummaryJgmt as boolean,",
				"          FinalLegalCost as decimal(18,2),",
				"          LegalSpecialty as integer,",
				"          ResponseFiled as timestamp,",
				"          AssignedGroupID as long,",
				"          MethodServed as integer,",
				"          UpdateUserID as long,",
				"          AssignedQueueID as long,",
				"          DocketNumber as string,",
				"          AssignmentStatus as integer,",
				"          Resolution as integer,",
				"          ClaimID as long,",
				"          HearingRoom as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          Name as string,",
				"          DeclaratoryJgmt as boolean,",
				"          CreateTime as timestamp,",
				"          PrimaryCause as integer,",
				"          PreviousGroupID as long,",
				"          CourtDistrict as integer,",
				"          VenueRating as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccMatter",
				"source(output(",
				"          Amount as decimal(18,2),",
				"          Retired as long,",
				"          Type as integer,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          Note as string,",
				"          PublicID as string,",
				"          ArchivePartition as long,",
				"          CreateUserID as long,",
				"          NegotiationDate as timestamp,",
				"          CreateTime as timestamp,",
				"          ID as long,",
				"          BeanVersion as integer,",
				"          NegotiationID as long,",
				"          UpdateUserID as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccNegotiationonline",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> cctlCoveragetype",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> CctlExposuretype",
				"source(output(",
				"          ValidationLevel as integer,",
				"          GroupType as integer,",
				"          LoadFactor as integer,",
				"          Retired as long,",
				"          OrganizationID as long,",
				"          UpdateTime as timestamp,",
				"          WorldVisible as boolean,",
				"          NameKanji as string,",
				"          PublicID as string,",
				"          Name as string,",
				"          SecurityZoneID as long,",
				"          CreateUserID as long,",
				"          CreateTime as timestamp,",
				"          ID as long,",
				"          SupervisorID as long,",
				"          BeanVersion as integer,",
				"          UpdateUserID as long",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccGroup",
				"source(output(",
				"          CLAIM_FEATURE_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_KEY as string,",
				"          CLAIMANT_KEY as string,",
				"          FEATURE_KEY as string,",
				"          LAST_STATUS_ID as timestamp,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          COVERAGE_CODE as string,",
				"          FEATURE_SETUP_DATE as date,",
				"          FEATURE_REPORTED_DATE as date,",
				"          SUIT_FLAG as boolean,",
				"          ADJUSTER_CODE as string,",
				"          ETL_ROW_EFF_DATETIMESTAMP as timestamp,",
				"          ETL_ROW_EXPOSURE_DATETIMESTAMP as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          EXPOSURE_CLAIMANTTYPE as integer,",
				"          EXPOSURE_STATE as integer,",
				"          EXPOSURE_ASSIGNEDUSERID as integer,",
				"          EXPOSURE_PREVIOUSUSERID as integer,",
				"          COV_EXPOSURELIMIT as integer,",
				"          COV_SUBTYPE as integer,",
				"          CASENUMBER as string,",
				"          COV_TYPE as integer,",
				"          EVL_CREATETIME as timestamp,",
				"          NEG_DATE as timestamp,",
				"          NEG_TYPE as integer,",
				"          NEG_AMOUNT as integer,",
				"          EXPOSURE_ID as integer,",
				"          EXPOSURE_CREATETIME as timestamp,",
				"          EXPOSURE_CLOSEDATE as timestamp,",
				"          EXPOSURE_REOPENDATE as timestamp,",
				"          EXPOSURE_CLOSEDOUTCOME as integer,",
				"          EXPOSURE_SUPERVISORID as integer,",
				"          EXPOSURE_SUPERVISORNAME as string,",
				"          EXPOSURE_ASSIGNEDUSERNAME as string,",
				"          COVERAGE_EXPIREDDATE as timestamp,",
				"          MAT_SENTTODEFENSEDATE as timestamp,",
				"          EXPOSURE_TYPE as string,",
				"          COV_SUBTYPE_DESCRIPTION as string,",
				"          COV_TYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLAIMANTTYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          EXPOSURE_STATE_DESCRIPTION as string,",
				"          NEG_TYPE_DESCRIPTION as string,",
				"          EXT_FIRST_OFR_AMT as integer,",
				"          EXT_LAST_OFR_AMT as integer,",
				"          EXT_FIRST_DMD_AMT as integer,",
				"          EXT_LAST_DMD_AMT as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tgtDimClaimFeature",
				"ccClaim, ccContact join(ccClaim@ID == ccContact@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContact",
				"joinCcClaimandCcContact, ccClaimindicator join(ccClaim@ID == ccClaimindicator@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATOR",
				"joinCcClaimandCcContactandCcCLAIMINDICATOR, ccExposure join(ccClaim@ID == ccExposure@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSURE",
				"joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSURE, ccCoveragetype join(ccClaim@ID == ccCoveragetype@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGE",
				"joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGE, ccMatter join(ccClaim@ID == ccMatter@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTER",
				"joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTER, ccNegotiationonline join(ccClaim@ID == ccNegotiationonline@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINE",
				"joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINE, cctlCoveragetype join(ccClaim@ID == cctlCoveragetype@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPE",
				"joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPE, CctlExposuretype join(ccClaim@ID == CctlExposuretype@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPEandCcEXPOSURETYPE",
				"joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPEandCcEXPOSURETYPE, ccGroup join(ccClaim@ID == ccGroup@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPEandCcEXPOSURETYPEandCcGroup",
				"joinCcClaimandCcContactandCcCLAIMINDICATORandCcEXPOSUREandCcCOVERAGEandCcMATTERandCcNEGOTIATIONLINEandCcCOVERAGETYPEandCcEXPOSURETYPEandCcGroup derive(SRC_SOURCE = 'CC',",
				"          SRC_CLAIMANT_KEY = ccContact@PublicID,",
				"          SRC_FEATURE_KEY = ccExposure@PublicID,",
				"          SRC_LAST_STATUS_PROC_DATETIMESTAMP = currentTimestamp(),",
				"          SRC_COVERAGE_CODE = cctlCoveragetype@TYPECODE,",
				"          SRC_FEATURE_SETUP_DATE = currentTimestamp(),",
				"          SRC_FEATURE_REPORTED_DATE = currentTimestamp(),",
				"          SRC_SUIT_FLAG = IsOn,",
				"          SRC_ETL_ROW_EFF_DATETIMESTAMP = currentTimestamp(),",
				"          SRC_ETL_ROW_EXPOSURE_DATETIMESTAMP = currentTimestamp(),",
				"          SRC_ETL_ADD_DATETIMESTAMP = currentTimestamp(),",
				"          SRC_ETL_LAST_UPDATE_DATETIMESTAMP = currentTimestamp(),",
				"          SRC_ETL_ACTIVE_FLAG = 'Y',",
				"          SRC_EXPOSURE_STATE = ccExposure@State,",
				"          SRC_EXPOSURE_ASSIGNEDUSERID = ccExposure@AssignedUserID,",
				"          SRC_EXPOSURE_CLAIMANTTYPE = ClaimantType,",
				"          SRC_EXPOSURE_PREVIOUSUSERID = ccExposure@PreviousUserID,",
				"          SRC_COV_SUBTYPE = CoverageSubType,",
				"          SRC_CASENUMBER = CaseNumber,",
				"          SRC_COV_TYPE = Type,",
				"          SRC_NEG_DATE = NegotiationDate,",
				"          SRC_NEG_amount = Amount,",
				"          SRC_EXT_FIRST_OFR_AMT = Amount,",
				"          SRC_EXT_LAST_OFR_AMT = Amount,",
				"          SRC_EXT_FIRST_DMD_AMT = Amount,",
				"          SRC_EXT_LAST_DMD_AMT = Amount,",
				"          SRC_EXPOSURE_ID = ccExposure@ID,",
				"          SRC_EXPOSURE_CREATETIME = ccExposure@CreateTime,",
				"          SRC_EXPOSURE_CLOSEDATE = ccExposure@CloseDate,",
				"          SRC_EXPOSURE_REOPENDATE = ccExposure@ReOpenDate,",
				"          SRC_EXPOSURE_CLOSEDOUTCOME = ccExposure@ClosedOutcome,",
				"          SRC_MAT_SENTTODEFENSEDATE = NegotiationDate,",
				"          SRC_EXPOSURE_SUPERVISORID = SupervisorID,",
				"          SRC_EXPOSURE_TYPE = ExposureType,",
				"          SRC_COV_SUBTYPE_DESCRIPTION = CoverageSubType,",
				"          SRC_COV_TYPE_DESCRIPTION = PrimaryCoverage,",
				"          SRC_EXPOSURE_CLAIMANTTYPE_DESCRIPTION = ClaimantType,",
				"          SRC_EXPOSURE_CLOSEDOUTCOME_DESCRIPTION = ccExposure@ClosedOutcome,",
				"          SRC_EXPOSURE_STATE_DESCRIPTION = CctlExposuretype@DESCRIPTION,",
				"          SRC_CLAIM_KEY = ccClaim@PublicID,",
				"          EXPOSURE_STATE = ccExposure@State) ~> columnTransformations",
				"columnTransformations derive(srcHashKey = sha1(SRC_SOURCE,SRC_CLAIM_KEY,SRC_CLAIMANT_KEY,SRC_FEATURE_KEY,SRC_EXPOSURE_STATE_DESCRIPTION,SRC_COVERAGE_CODE,SRC_SUIT_FLAG,SRC_EXPOSURE_CLAIMANTTYPE,SRC_EXPOSURE_STATE,toInteger(SRC_EXPOSURE_ASSIGNEDUSERID),SRC_EXPOSURE_PREVIOUSUSERID,SRC_COV_SUBTYPE,SRC_CASENUMBER,SRC_COV_TYPE,toInteger(SRC_NEG_amount),toInteger(SRC_EXT_FIRST_OFR_AMT),toInteger(SRC_EXT_LAST_OFR_AMT),toInteger(SRC_EXT_FIRST_DMD_AMT),toInteger(SRC_EXT_LAST_DMD_AMT),toInteger(SRC_EXPOSURE_ID),SRC_EXPOSURE_CLOSEDOUTCOME,toInteger(SRC_EXPOSURE_SUPERVISORID),toString(SRC_COV_SUBTYPE_DESCRIPTION),toString(SRC_COV_TYPE_DESCRIPTION),toString(SRC_EXPOSURE_CLAIMANTTYPE_DESCRIPTION),toString(SRC_EXPOSURE_CLOSEDOUTCOME_DESCRIPTION),SRC_EXPOSURE_STATE_DESCRIPTION)) ~> srcHashKey",
				"tgtDimClaimFeature derive(tgtHashKey = sha1(SOURCE,CLAIM_KEY,CLAIMANT_KEY,FEATURE_KEY,EXPOSURE_STATE_DESCRIPTION,COVERAGE_CODE,SUIT_FLAG,EXPOSURE_CLAIMANTTYPE,EXPOSURE_STATE,EXPOSURE_ASSIGNEDUSERID,EXPOSURE_PREVIOUSUSERID,COV_SUBTYPE,CASENUMBER,COV_TYPE,NEG_AMOUNT,EXT_FIRST_OFR_AMT,EXT_LAST_OFR_AMT,EXT_FIRST_DMD_AMT,EXT_LAST_DMD_AMT,EXPOSURE_ID,EXPOSURE_CLOSEDOUTCOME,EXPOSURE_SUPERVISORID,COV_SUBTYPE_DESCRIPTION,COV_TYPE_DESCRIPTION,EXPOSURE_CLAIMANTTYPE_DESCRIPTION,EXPOSURE_CLOSEDOUTCOME_DESCRIPTION,EXPOSURE_STATE_DESCRIPTION)) ~> tgtHashKey",
				"srcHashKey, tgtHashKey lookup(SRC_CLAIM_KEY == CLAIM_KEY,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupKeyColumn",
				"lookupKeyColumn split(isNull(CLAIM_KEY),",
				"     !isNull(CLAIM_KEY)&&notEquals(srcHashKey, tgtHashKey),",
				"     disjoint: false) ~> split1@(insert, update, noupdate)",
				"split1@update alterRow(updateIf(true())) ~> updateCondition",
				"split1@insert sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CLAIM_FEATURE_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_KEY as string,",
				"          CLAIMANT_KEY as string,",
				"          FEATURE_KEY as string,",
				"          LAST_STATUS_ID as timestamp,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          COVERAGE_CODE as string,",
				"          FEATURE_SETUP_DATE as date,",
				"          FEATURE_REPORTED_DATE as date,",
				"          SUIT_FLAG as boolean,",
				"          ADJUSTER_CODE as string,",
				"          ETL_ROW_EFF_DATETIMESTAMP as timestamp,",
				"          ETL_ROW_EXPOSURE_DATETIMESTAMP as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          EXPOSURE_CLAIMANTTYPE as integer,",
				"          EXPOSURE_STATE as integer,",
				"          EXPOSURE_ASSIGNEDUSERID as integer,",
				"          EXPOSURE_PREVIOUSUSERID as integer,",
				"          COV_EXPOSURELIMIT as integer,",
				"          COV_SUBTYPE as integer,",
				"          CASENUMBER as string,",
				"          COV_TYPE as integer,",
				"          EVL_CREATETIME as timestamp,",
				"          NEG_DATE as timestamp,",
				"          NEG_TYPE as integer,",
				"          NEG_AMOUNT as integer,",
				"          EXPOSURE_ID as integer,",
				"          EXPOSURE_CREATETIME as timestamp,",
				"          EXPOSURE_CLOSEDATE as timestamp,",
				"          EXPOSURE_REOPENDATE as timestamp,",
				"          EXPOSURE_CLOSEDOUTCOME as integer,",
				"          EXPOSURE_SUPERVISORID as integer,",
				"          EXPOSURE_SUPERVISORNAME as string,",
				"          EXPOSURE_ASSIGNEDUSERNAME as string,",
				"          COVERAGE_EXPIREDDATE as timestamp,",
				"          MAT_SENTTODEFENSEDATE as timestamp,",
				"          EXPOSURE_TYPE as string,",
				"          COV_SUBTYPE_DESCRIPTION as string,",
				"          COV_TYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLAIMANTTYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          EXPOSURE_STATE_DESCRIPTION as string,",
				"          NEG_TYPE_DESCRIPTION as string,",
				"          EXT_FIRST_OFR_AMT as integer,",
				"          EXT_LAST_OFR_AMT as integer,",
				"          EXT_FIRST_DMD_AMT as integer,",
				"          EXT_LAST_DMD_AMT as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SOURCE = SRC_SOURCE,",
				"          CLAIM_KEY = SRC_CLAIM_KEY,",
				"          CLAIMANT_KEY = SRC_CLAIMANT_KEY,",
				"          FEATURE_KEY = SRC_FEATURE_KEY,",
				"          LAST_STATUS_PROC_DATETIMESTAMP = SRC_LAST_STATUS_PROC_DATETIMESTAMP,",
				"          COVERAGE_CODE = SRC_COVERAGE_CODE,",
				"          FEATURE_SETUP_DATE = SRC_FEATURE_SETUP_DATE,",
				"          FEATURE_REPORTED_DATE = SRC_FEATURE_REPORTED_DATE,",
				"          SUIT_FLAG = SRC_SUIT_FLAG,",
				"          ETL_ROW_EFF_DATETIMESTAMP = SRC_ETL_ROW_EFF_DATETIMESTAMP,",
				"          ETL_ROW_EXPOSURE_DATETIMESTAMP = SRC_ETL_ROW_EXPOSURE_DATETIMESTAMP,",
				"          ETL_ADD_DATETIMESTAMP = SRC_ETL_ADD_DATETIMESTAMP,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP = SRC_ETL_LAST_UPDATE_DATETIMESTAMP,",
				"          ETL_ACTIVE_FLAG = SRC_ETL_ACTIVE_FLAG,",
				"          EXPOSURE_CLAIMANTTYPE = SRC_EXPOSURE_CLAIMANTTYPE,",
				"          EXPOSURE_ASSIGNEDUSERID = SRC_EXPOSURE_ASSIGNEDUSERID,",
				"          EXPOSURE_PREVIOUSUSERID = SRC_EXPOSURE_PREVIOUSUSERID,",
				"          COV_SUBTYPE = SRC_COV_SUBTYPE,",
				"          CASENUMBER = SRC_CASENUMBER,",
				"          COV_TYPE = SRC_COV_TYPE,",
				"          NEG_DATE = SRC_NEG_DATE,",
				"          NEG_AMOUNT = SRC_NEG_amount,",
				"          EXPOSURE_ID = SRC_EXPOSURE_ID,",
				"          EXPOSURE_CREATETIME = SRC_EXPOSURE_CREATETIME,",
				"          EXPOSURE_CLOSEDATE = SRC_EXPOSURE_CLOSEDATE,",
				"          EXPOSURE_REOPENDATE = SRC_EXPOSURE_REOPENDATE,",
				"          EXPOSURE_CLOSEDOUTCOME = SRC_EXPOSURE_CLOSEDOUTCOME,",
				"          EXPOSURE_SUPERVISORID = SRC_EXPOSURE_SUPERVISORID,",
				"          MAT_SENTTODEFENSEDATE = SRC_MAT_SENTTODEFENSEDATE,",
				"          EXPOSURE_TYPE = SRC_EXPOSURE_SUPERVISORID,",
				"          COV_SUBTYPE_DESCRIPTION = SRC_COV_SUBTYPE_DESCRIPTION,",
				"          COV_TYPE_DESCRIPTION = SRC_COV_TYPE_DESCRIPTION,",
				"          EXPOSURE_CLAIMANTTYPE_DESCRIPTION = SRC_EXPOSURE_CLAIMANTTYPE_DESCRIPTION,",
				"          EXPOSURE_CLOSEDOUTCOME_DESCRIPTION = SRC_EXPOSURE_CLOSEDOUTCOME_DESCRIPTION,",
				"          EXPOSURE_STATE_DESCRIPTION = SRC_EXPOSURE_STATE_DESCRIPTION,",
				"          EXT_FIRST_OFR_AMT = SRC_EXT_FIRST_OFR_AMT,",
				"          EXT_LAST_OFR_AMT = SRC_EXT_LAST_OFR_AMT,",
				"          EXT_FIRST_DMD_AMT = SRC_EXT_FIRST_DMD_AMT,",
				"          EXT_LAST_DMD_AMT = SRC_EXT_LAST_DMD_AMT,",
				"          EXPOSURE_STATE = SRC_EXPOSURE_STATE",
				"     )) ~> insertedRows",
				"updateCondition sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CLAIM_FEATURE_ID as integer,",
				"          SOURCE as string,",
				"          CLAIM_KEY as string,",
				"          CLAIMANT_KEY as string,",
				"          FEATURE_KEY as string,",
				"          LAST_STATUS_ID as timestamp,",
				"          LAST_STATUS_PROC_DATETIMESTAMP as timestamp,",
				"          COVERAGE_CODE as string,",
				"          FEATURE_SETUP_DATE as date,",
				"          FEATURE_REPORTED_DATE as date,",
				"          SUIT_FLAG as boolean,",
				"          ADJUSTER_CODE as string,",
				"          ETL_ROW_EFF_DATETIMESTAMP as timestamp,",
				"          ETL_ROW_EXPOSURE_DATETIMESTAMP as timestamp,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FLAG as string,",
				"          EXPOSURE_CLAIMANTTYPE as integer,",
				"          EXPOSURE_STATE as integer,",
				"          EXPOSURE_ASSIGNEDUSERID as integer,",
				"          EXPOSURE_PREVIOUSUSERID as integer,",
				"          COV_EXPOSURELIMIT as integer,",
				"          COV_SUBTYPE as integer,",
				"          CASENUMBER as string,",
				"          COV_TYPE as integer,",
				"          EVL_CREATETIME as timestamp,",
				"          NEG_DATE as timestamp,",
				"          NEG_TYPE as integer,",
				"          NEG_AMOUNT as integer,",
				"          EXPOSURE_ID as integer,",
				"          EXPOSURE_CREATETIME as timestamp,",
				"          EXPOSURE_CLOSEDATE as timestamp,",
				"          EXPOSURE_REOPENDATE as timestamp,",
				"          EXPOSURE_CLOSEDOUTCOME as integer,",
				"          EXPOSURE_SUPERVISORID as integer,",
				"          EXPOSURE_SUPERVISORNAME as string,",
				"          EXPOSURE_ASSIGNEDUSERNAME as string,",
				"          COVERAGE_EXPIREDDATE as timestamp,",
				"          MAT_SENTTODEFENSEDATE as timestamp,",
				"          EXPOSURE_TYPE as string,",
				"          COV_SUBTYPE_DESCRIPTION as string,",
				"          COV_TYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLAIMANTTYPE_DESCRIPTION as string,",
				"          EXPOSURE_CLOSEDOUTCOME_DESCRIPTION as string,",
				"          EXPOSURE_STATE_DESCRIPTION as string,",
				"          NEG_TYPE_DESCRIPTION as string,",
				"          EXT_FIRST_OFR_AMT as integer,",
				"          EXT_LAST_OFR_AMT as integer,",
				"          EXT_FIRST_DMD_AMT as integer,",
				"          EXT_LAST_DMD_AMT as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['CLAIM_KEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SOURCE = SRC_SOURCE,",
				"          CLAIM_KEY = SRC_CLAIM_KEY,",
				"          CLAIMANT_KEY = SRC_CLAIMANT_KEY,",
				"          FEATURE_KEY = SRC_FEATURE_KEY,",
				"          LAST_STATUS_PROC_DATETIMESTAMP = SRC_LAST_STATUS_PROC_DATETIMESTAMP,",
				"          COVERAGE_CODE = SRC_COVERAGE_CODE,",
				"          FEATURE_SETUP_DATE = SRC_FEATURE_SETUP_DATE,",
				"          FEATURE_REPORTED_DATE = SRC_FEATURE_REPORTED_DATE,",
				"          SUIT_FLAG = SRC_SUIT_FLAG,",
				"          ETL_ROW_EFF_DATETIMESTAMP = SRC_ETL_ROW_EFF_DATETIMESTAMP,",
				"          ETL_ROW_EXPOSURE_DATETIMESTAMP = SRC_ETL_ROW_EXPOSURE_DATETIMESTAMP,",
				"          ETL_ADD_DATETIMESTAMP = SRC_ETL_ADD_DATETIMESTAMP,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP = SRC_ETL_LAST_UPDATE_DATETIMESTAMP,",
				"          ETL_ACTIVE_FLAG = SRC_ETL_ACTIVE_FLAG,",
				"          EXPOSURE_CLAIMANTTYPE = SRC_EXPOSURE_CLAIMANTTYPE,",
				"          EXPOSURE_STATE = SRC_EXPOSURE_STATE,",
				"          EXPOSURE_ASSIGNEDUSERID = SRC_EXPOSURE_ASSIGNEDUSERID,",
				"          EXPOSURE_PREVIOUSUSERID = SRC_EXPOSURE_PREVIOUSUSERID,",
				"          COV_SUBTYPE = SRC_COV_SUBTYPE,",
				"          CASENUMBER = SRC_CASENUMBER,",
				"          COV_TYPE = SRC_COV_TYPE,",
				"          NEG_DATE = SRC_NEG_DATE,",
				"          NEG_AMOUNT = SRC_NEG_amount,",
				"          EXT_FIRST_OFR_AMT = SRC_EXT_FIRST_OFR_AMT,",
				"          EXT_LAST_OFR_AMT = SRC_EXT_LAST_OFR_AMT,",
				"          EXT_FIRST_DMD_AMT = SRC_EXT_FIRST_DMD_AMT,",
				"          EXT_LAST_DMD_AMT = SRC_EXT_LAST_DMD_AMT,",
				"          EXPOSURE_ID = SRC_EXPOSURE_ID,",
				"          EXPOSURE_CREATETIME = SRC_EXPOSURE_CREATETIME,",
				"          EXPOSURE_CLOSEDATE = SRC_EXPOSURE_CLOSEDATE,",
				"          EXPOSURE_REOPENDATE = SRC_EXPOSURE_REOPENDATE,",
				"          EXPOSURE_CLOSEDOUTCOME = SRC_EXPOSURE_CLOSEDOUTCOME,",
				"          EXPOSURE_SUPERVISORID = SRC_EXPOSURE_SUPERVISORID,",
				"          MAT_SENTTODEFENSEDATE = SRC_MAT_SENTTODEFENSEDATE,",
				"          EXPOSURE_TYPE = SRC_EXPOSURE_TYPE,",
				"          COV_SUBTYPE_DESCRIPTION = SRC_COV_SUBTYPE_DESCRIPTION,",
				"          COV_TYPE_DESCRIPTION = SRC_COV_TYPE_DESCRIPTION,",
				"          EXPOSURE_CLAIMANTTYPE_DESCRIPTION = SRC_EXPOSURE_CLAIMANTTYPE_DESCRIPTION,",
				"          EXPOSURE_CLOSEDOUTCOME_DESCRIPTION = SRC_EXPOSURE_CLOSEDOUTCOME_DESCRIPTION,",
				"          EXPOSURE_STATE_DESCRIPTION = SRC_EXPOSURE_STATE_DESCRIPTION",
				"     )) ~> updatedRows"
			]
		}
	}
}