{
	"name": "factPremiumPolYear",
	"properties": {
		"folder": {
			"name": "Insurance Analytics Azure/pcDimDataflows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_DW_FACT_PREMIUM_TRANSACTION",
						"type": "DatasetReference"
					},
					"name": "factPremiumTransaction"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_POLICY",
						"type": "DatasetReference"
					},
					"name": "dimPolicy"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DW_FACT_PREMIUM_POL_YEAR",
						"type": "DatasetReference"
					},
					"name": "factPremiumPolYear"
				}
			],
			"transformations": [
				{
					"name": "JoinFactPremiumTransactionAndPolicy"
				},
				{
					"name": "aggergation"
				},
				{
					"name": "columnTransformations"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PREMIUM_TRANSACTION_ID as integer,",
				"          ORG_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          POLICY_ID as integer,",
				"          LOC_ID as integer,",
				"          COVG_ID as integer,",
				"          AGENT_ID as integer,",
				"          AGENCY_ID as integer,",
				"          PRIM_NAMED_INSURED_ID as integer,",
				"          ACCT_ID as integer,",
				"          DATE_ID as integer,",
				"          MONTH_ID as integer,",
				"          ALT_PREMIUM_TRANSACTION_ID as integer,",
				"          REC_TYPE_ID as integer,",
				"          ACCTG_PRD_ID as integer,",
				"          TRANSACTION_PROC_DT_ID as integer,",
				"          TRANSACTION_EFF_DT_ID as integer,",
				"          TRANSACTION_EXP_DT_ID as integer,",
				"          TRANSACTION_PROC_DATETIMESTAMP as timestamp,",
				"          RISK_TYPE_CD as string,",
				"          SOURCE as string,",
				"          TRANSACTION_TYPE_CD as string,",
				"          TRANSACTION_CD as string,",
				"          TRANSACTION_SEQ as integer,",
				"          CURRENCY_CD as string,",
				"          TRANSACTION_AMOUNT as integer,",
				"          TRANSACTION_ALLOC_CD as string,",
				"          WRITTEN_PREMIUM_AMOUNT as integer,",
				"          INFORCE_PREMIUM_AMOUNT as integer,",
				"          TAX_AMOUNT as integer,",
				"          FEE_AMOUNT as integer,",
				"          SURCHARGE_AMOUNT as integer,",
				"          COMMISSION_AMOUNT as integer,",
				"          COMMISSION_PERCENT as integer,",
				"          PREMIUM_FULLY_EARNED_FLAG as string,",
				"          ESTIMATED_PREMIUM_AMOUNT as integer,",
				"          REPORTED_PREMIUM_AMOUNT as integer,",
				"          AUDIT_PREMIUM_AMOUNT as integer,",
				"          PREMIUM_BASIS_AMOUNT as integer,",
				"          AUDITABLE_FLAG as string,",
				"          ETL_ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          TOTALPREMIUMRPT as decimal(19,2),",
				"          TOTALREPORTEDPREMIUM as decimal(19,2),",
				"          POLICY_STATUS_DESC_EXT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> factPremiumTransaction",
				"source(output(",
				"          POLICY_ID as integer,",
				"          SOURCE as string,",
				"          LAST_STATUS_ID as integer,",
				"          LAST_STATUS_PROC_DTS as timestamp,",
				"          LAST_STATUS_EFF_DATE as timestamp,",
				"          POLICY_KEY as string,",
				"          POLICY_NO as string,",
				"          POL_EFF_DATE as timestamp,",
				"          POL_EXP_DATE as timestamp,",
				"          ORIG_EFF_DATE as timestamp,",
				"          POL_YEAR as integer,",
				"          POL_FORM_CODE as string,",
				"          PRIM_STATE_CODE as string,",
				"          POL_TERM as string,",
				"          SIC_CODE as string,",
				"          NEW_BUS_FL as string,",
				"          ENTITY_TYPE_CODE as string,",
				"          BILL_PLAN_CODE as string,",
				"          PAY_PLAN_CODE as string,",
				"          AUDIT_PLAN_CODE as string,",
				"          ELECT_FUNDS_TFR_FL as string,",
				"          CLAIMS_MADE_FL as string,",
				"          RETRO_FL as string,",
				"          UNDERWRITER_CODE as string,",
				"          END_EFF_DATE as timestamp,",
				"          END_EXP_DATE as timestamp,",
				"          MOSTRECENTMODEL as boolean,",
				"          JOB_CREATETIME as timestamp,",
				"          JOB_REJECTREASONTEXT as string,",
				"          JOB_JOBNUMBER as string,",
				"          JOB_SUBMISSIONDATE as timestamp,",
				"          JOB_UPDATEUSERID as integer,",
				"          ISSUEDATE as timestamp,",
				"          CANCELLATIONDATE as timestamp,",
				"          HASAPPROVALORREJECTION as boolean,",
				"          UWISSUE_SHORTDESCRIPTION as string,",
				"          POLICY_STATUS_ID as integer,",
				"          POL_PERIOD_STATUS as integer,",
				"          BRANCHNAME as string,",
				"          UPDATE_USER_ID as integer,",
				"          UPDATE_USER as string,",
				"          JOB_RENEWALCODE as integer,",
				"          POLICYTYPE as integer,",
				"          POLICYSUFFIX as string,",
				"          ACCOUNTNUMBER as string,",
				"          UNDERWRITERGROUPTYPE as integer,",
				"          UNDERWRITINGGROUPNAME as integer,",
				"          RETENTION_TYPE as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp,",
				"          ETL_ACTIVE_FL as string,",
				"          JOB_RENEWALCODE_DESCRIPTION as string,",
				"          POL_PERIOD_STATUS_DESCRIPTION as string,",
				"          POLICYTYPE_DESCRIPTION as string,",
				"          UNDERWRITINGGROUPNAME_DESCRIPTION as string,",
				"          UNDERWRITERGROUPTYPE_DESCRIPTION as string,",
				"          POL_STATUS_DESCRIPTION as string,",
				"          ACCOUNTNAME as string,",
				"          POLICY_STATUS_DESC as string,",
				"          POLICY_REASON_DESC as string,",
				"          POLICY_SNAPSHOT_FLAG as string,",
				"          PRIMIUM_STATE_DESCRIPTION as string,",
				"          UNDERWRITER_DESC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> dimPolicy",
				"factPremiumTransaction, dimPolicy join(factPremiumTransaction@POLICY_ID == dimPolicy@POLICY_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinFactPremiumTransactionAndPolicy",
				"JoinFactPremiumTransactionAndPolicy aggregate(groupBy(ORG_ID,",
				"          PRODUCT_ID,",
				"          POL_YEAR,",
				"          AGENT_ID,",
				"          AGENCY_ID,",
				"          LOC_ID,",
				"          factPremiumTransaction@POLICY_ID,",
				"          ACCTG_PRD_ID,",
				"          CURRENCY_CD),",
				"     TGT_INFORCE_PREMIUM_AMOUNT = sum(INFORCE_PREMIUM_AMOUNT),",
				"          TGT_WRITTEN_PREMIUM_AMOUNT = sum(WRITTEN_PREMIUM_AMOUNT),",
				"          TGT_AUDIT_PREMIUM_AMOUNT = sum(AUDIT_PREMIUM_AMOUNT),",
				"          TGT_CANCEL_PREMIUM_AMOUNT = sum(case(TRANSACTION_CD=='Cancellation', WRITTEN_PREMIUM_AMOUNT, 0)),",
				"          TGT_FEE_AMOUNT = sum(FEE_AMOUNT),",
				"          TGT_TAX_AMOUNT = sum(TAX_AMOUNT),",
				"          TGT_SURCHARGE_AMOUNT = sum(SURCHARGE_AMOUNT),",
				"          TGT_NEW_BUSINESS_PREMIUM_AMOUNT = sum(case(TRANSACTION_CD == 'Submission'||TRANSACTION_CD == 'Issuance',WRITTEN_PREMIUM_AMOUNT,0)),",
				"          TGT_RENEW_BUSINESS_PREMIUM_AMOUNT = sum(case(TRANSACTION_CD == 'Renewal',WRITTEN_PREMIUM_AMOUNT,0)),",
				"          TGT_ENDORSEMENT_PREMIUM_AMOUNT = sum(case(TRANSACTION_CD == 'PolicyChange',WRITTEN_PREMIUM_AMOUNT,0)),",
				"          TGT_REINSTATED_PREMIUM_AMOUNT = sum(case(TRANSACTION_CD=='Reinstatement'|| TRANSACTION_CD=='Rewrite'|| TRANSACTION_CD=='RewriteNewAccount',WRITTEN_PREMIUM_AMOUNT,0))) ~> aggergation",
				"aggergation derive(TGT_ETL_ACTIVE_FLAG = 'Y',",
				"          TGT_ETL_ADD_DATETIMESTAMP = currentTimestamp(),",
				"          TGT_ETL_LAST_UPDATE_DATETIMESTAMP = currentTimestamp()) ~> columnTransformations",
				"columnTransformations sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          PREMIUM_POL_YEAR_ID as integer,",
				"          ORG_ID as integer,",
				"          PRODUCT_ID as integer,",
				"          AGENT_ID as integer,",
				"          AGENCY_ID as integer,",
				"          RECORD_TYPE_ID as integer,",
				"          POLICY_ID as integer,",
				"          LOCATION_ID as integer,",
				"          ACCTG_PRD_ID as integer,",
				"          CURRENCY_CODE as string,",
				"          POL_YEAR as integer,",
				"          POLICY_STATUS_ID as integer,",
				"          INFORCE_PREMIUM_AMOUNT as decimal(18,2),",
				"          WRITTEN_PREMIUM_AMOUNT as decimal(18,2),",
				"          AUDIT_PREMIUM_AMOUNT as decimal(18,2),",
				"          CANCEL_PREMIUM_AMOUNT as decimal(18,2),",
				"          FEE_AMOUNT as decimal(18,2),",
				"          TAX_AMOUNT as decimal(18,2),",
				"          SURCHARGE_AMOUNT as decimal(18,2),",
				"          NEW_BUSINESS_PREMIUM_AMOUNT as decimal(18,2),",
				"          RENEW_BUSINESS_PREMIUM_AMOUNT as decimal(18,2),",
				"          ENDORSEMENT_PREMIUM_AMOUNT as decimal(18,2),",
				"          REINSTATED_PREMIUM_AMOUNT as decimal(18,2),",
				"          COMMISSION_AMOUNT as decimal(18,2),",
				"          ETL_ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIME as timestamp,",
				"          ETL_LAST_UPDATE_DATETIME as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ORG_ID,",
				"          PRODUCT_ID,",
				"          AGENT_ID,",
				"          AGENCY_ID,",
				"          POLICY_ID,",
				"          LOCATION_ID = LOC_ID,",
				"          ACCTG_PRD_ID,",
				"          CURRENCY_CODE = CURRENCY_CD,",
				"          POL_YEAR,",
				"          INFORCE_PREMIUM_AMOUNT = TGT_INFORCE_PREMIUM_AMOUNT,",
				"          WRITTEN_PREMIUM_AMOUNT = TGT_WRITTEN_PREMIUM_AMOUNT,",
				"          AUDIT_PREMIUM_AMOUNT = TGT_AUDIT_PREMIUM_AMOUNT,",
				"          CANCEL_PREMIUM_AMOUNT = TGT_CANCEL_PREMIUM_AMOUNT,",
				"          FEE_AMOUNT = TGT_FEE_AMOUNT,",
				"          TAX_AMOUNT = TGT_TAX_AMOUNT,",
				"          SURCHARGE_AMOUNT = TGT_SURCHARGE_AMOUNT,",
				"          NEW_BUSINESS_PREMIUM_AMOUNT = TGT_NEW_BUSINESS_PREMIUM_AMOUNT,",
				"          RENEW_BUSINESS_PREMIUM_AMOUNT = TGT_RENEW_BUSINESS_PREMIUM_AMOUNT,",
				"          ENDORSEMENT_PREMIUM_AMOUNT = TGT_ENDORSEMENT_PREMIUM_AMOUNT,",
				"          REINSTATED_PREMIUM_AMOUNT = TGT_REINSTATED_PREMIUM_AMOUNT,",
				"          ETL_ACTIVE_FLAG = TGT_ETL_ACTIVE_FLAG,",
				"          ETL_ADD_DATETIME = TGT_ETL_ADD_DATETIMESTAMP,",
				"          ETL_LAST_UPDATE_DATETIME = TGT_ETL_LAST_UPDATE_DATETIMESTAMP",
				"     )) ~> factPremiumPolYear"
			]
		}
	}
}