{
	"name": "dimInjuryIncident",
	"properties": {
		"folder": {
			"name": "Insurance Analytics Azure/ccDimDataflows"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_CC_INCIDENT",
						"type": "DatasetReference"
					},
					"name": "ccIncident"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_CONTACT",
						"type": "DatasetReference"
					},
					"name": "ccContact"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_EXPOSURETYPE",
						"type": "DatasetReference"
					},
					"name": "cctlExposureType"
				},
				{
					"dataset": {
						"referenceName": "DS_CC_CLAIMCONTACTROLE",
						"type": "DatasetReference"
					},
					"name": "ccClaimContactRole"
				},
				{
					"dataset": {
						"referenceName": "DS_CCTL_DETAILEDINJURYTYPE",
						"type": "DatasetReference"
					},
					"name": "ccDetailedInjuryType"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_INJURY_INCIDENT",
						"type": "DatasetReference"
					},
					"name": "tgtDimInjuryIncident"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_DIM_INJURY_INCIDENT",
						"type": "DatasetReference"
					},
					"name": "dimInjuryIncident"
				},
				{
					"dataset": {
						"referenceName": "DS_DIM_INJURY_INCIDENT",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "joinIncidentAndConact"
				},
				{
					"name": "joinIncidentAndContactAndExposuretype"
				},
				{
					"name": "joinIncidentAndContactAndExposuretypeAndClaimcontactrole"
				},
				{
					"name": "ColumnTransformations"
				},
				{
					"name": "joinIncidentAndContactAndExposuretypeAndClaimcontactroleAndDetailedInjuryType"
				},
				{
					"name": "SrcHashKey"
				},
				{
					"name": "tgtHashKey"
				},
				{
					"name": "lookupKeyColumn"
				},
				{
					"name": "insert"
				},
				{
					"name": "updateCondition"
				}
			],
			"scriptLines": [
				"source(output(",
				"          RentalRequired as boolean,",
				"          ReturnToWorkActual as boolean,",
				"          VehicleDriveable as boolean,",
				"          FireBurnEngine as boolean,",
				"          RelatedTripRUID as long,",
				"          VehicleTitleRecvd as integer,",
				"          PropertyID as long,",
				"          DamagedAreaSize as integer,",
				"          FireProtectionAvailable as boolean,",
				"          RoofMaterial as integer,",
				"          VehicleRollOver as boolean,",
				"          HitAndRun as boolean,",
				"          VehicleUseReason as integer,",
				"          StartDate as timestamp,",
				"          RecovClassType as integer,",
				"          BeanVersion as integer,",
				"          SalvageStorage as decimal(18,2),",
				"          DelayOnly as boolean,",
				"          AirbagsMissing as boolean,",
				"          RentalAgency as string,",
				"          SprinkRetServ as integer,",
				"          LossofUse as boolean,",
				"          MovePermission as boolean,",
				"          AffdvCmplInd as integer,",
				"          IncludeContentLineItems as boolean,",
				"          VehicleParked as boolean,",
				"          InternalUserID as long,",
				"          MealsDays as integer,",
				"          NumberOfPeopleOnPolicy as integer,",
				"          SalvagePrep as decimal(18,2),",
				"          TrafficViolation as integer,",
				"          CitationIssued as integer,",
				"          MinorOnPolicy as integer,",
				"          EstimatesReceived as integer,",
				"          AmbulanceUsed as boolean,",
				"          EquipmentFailure as boolean,",
				"          StorageFeeAmt as decimal(18,2),",
				"          TotalLoss as boolean,",
				"          VehicleSubmerged as boolean,",
				"          FireBurnWindshield as boolean,",
				"          NumSprinkOper as integer,",
				"          MealsPeople as integer,",
				"          AlarmType as integer,",
				"          AssessmentType as integer,",
				"          InspectionRequired as boolean,",
				"          ReturnToWorkDate as timestamp,",
				"          DateVehicleSold as timestamp,",
				"          PublicID as string,",
				"          OccupancyType as integer,",
				"          CarrierCompensatedAmount as decimal(18,2),",
				"          AppraisalFirstAppointment as timestamp,",
				"          Appraisal as boolean,",
				"          RentalEndDate as timestamp,",
				"          OwnersPermission as boolean,",
				"          VehicleDirection as integer,",
				"          AssessmentCloseDate as timestamp,",
				"          RecovState as integer,",
				"          SalvageTitle as decimal(18,2),",
				"          DriverRelation as integer,",
				"          MaterialsDamaged as string,",
				"          RentalReserveNo as string,",
				"          LossArea as integer,",
				"          GeneralInjuryType as integer,",
				"          VehicleAge10Years as boolean,",
				"          UpdateUserID as long,",
				"          ClaimID as long,",
				"          RecovDate as timestamp,",
				"          UpdateTime as timestamp,",
				"          WhenToView as string,",
				"          FireBurnDash as boolean,",
				"          ExtDamagetxt as string,",
				"          VehicleLossParty as integer,",
				"          Speed as integer,",
				"          EstRepairCost as decimal(18,2),",
				"          Collision as boolean,",
				"          AssessmentComment as string,",
				"          ClaimIncident as boolean,",
				"          AntiThftInd as boolean,",
				"          LocationInd as boolean,",
				"          CreateTime as timestamp,",
				"          StorageAccrInd as integer,",
				"          SprinklerType as integer,",
				"          FloodSaltWater as boolean,",
				"          CollisionPoint as integer,",
				"          DisabledDueToAccident as integer,",
				"          VehiclePolStatus as integer,",
				"          InteriorMissing as boolean,",
				"          WaterLevelSeats as boolean,",
				"          DateVehicleRecovered as timestamp,",
				"          RepWhereDisInd as boolean,",
				"          Extrication as boolean,",
				"          Retired as long,",
				"          SalvageTow as decimal(18,2),",
				"          VehicleTitleReqd as integer,",
				"          IncludeLineItems as boolean,",
				"          Impairment as decimal(4,1),",
				"          LossDesc as string,",
				"          DateSalvageAssigned as timestamp,",
				"          PercentageDrivenByMinor as integer,",
				"          AssessmentTargetCloseDate as timestamp,",
				"          PropertySize as integer,",
				"          OdomRead as integer,",
				"          Severity as integer,",
				"          ReturnToModWorkValid as boolean,",
				"          NumSprinkler as integer,",
				"          BaggageType as integer,",
				"          ID as long,",
				"          SalvageNet as decimal(18,2),",
				"          FencesDamaged as boolean,",
				"          WaterLevelDash as boolean,",
				"          VehicleID as long,",
				"          StorageFclty as string,",
				"          RecoveryLocationID as long,",
				"          TotalLossPoints as integer,",
				"          DescOther as string,",
				"          RecovCondType as integer,",
				"          LossOccured as integer,",
				"          BodyShopSelected as boolean,",
				"          DriverRelToOwner as integer,",
				"          VehicleAge5Years as boolean,",
				"          SalvageProceeds as decimal(18,2),",
				"          VehicleACV as decimal(18,2),",
				"          Subtype as integer,",
				"          RentalDailyRate as decimal(18,2),",
				"          RentalBeginDate as timestamp,",
				"          ExtWallMat as integer,",
				"          TripRUID as long,",
				"          MealsRate as decimal(18,2),",
				"          MoldInvolved as integer,",
				"          LocationAddress as long,",
				"          VehicleOperable as boolean,",
				"          AlreadyRepaired as boolean,",
				"          LotNumber as string,",
				"          VehTowedInd as boolean,",
				"          Mileage100K as boolean,",
				"          BaggageMissingFrom as timestamp,",
				"          LossEstimate as decimal(18,2),",
				"          DetailedInjuryType as integer,",
				"          VehicleType as integer,",
				"          EstDamageType as integer,",
				"          CarrierCompensated as boolean,",
				"          PhantomVehicle as boolean,",
				"          EMSInd as boolean,",
				"          VehStolenInd as boolean,",
				"          VehCondType as integer,",
				"          ArchivePartition as long,",
				"          LostWages as boolean,",
				"          VehLockInd as boolean,",
				"          CreateUserID as long,",
				"          YearBuilt as timestamp,",
				"          AssessmentName as string,",
				"          OwnerRetainingSalvage as boolean,",
				"          NumStories as integer,",
				"          EstRepairTime as string,",
				"          Description as string,",
				"          ComponentsMissing as boolean,",
				"          ReturnToModWorkActual as boolean,",
				"          LoadCommandID as long,",
				"          RecovInd as integer,",
				"          SalvageCompany as string,",
				"          ClassType as integer,",
				"          VehicleLocation as string,",
				"          ReturnToWorkValid as boolean,",
				"          BaggageRecoveredOn as timestamp,",
				"          DebrisRemovalInd as boolean,",
				"          FireProtDetails as string,",
				"          AssessmentStatus as integer,",
				"          MedicalTreatmentType as integer,",
				"          YearsInHome as integer,",
				"          ReturnToModWorkDate as timestamp,",
				"          AirbagsDeployed as boolean,",
				"          HazardInvolved as integer,",
				"          PropertyDesc as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccIncident",
				"source(output(",
				"          ValidationLevel as integer,",
				"          LawFirmSpecialty as integer,",
				"          Retired as long,",
				"          FirstNameKanji as string,",
				"          EmailAddress2 as string,",
				"          SpecialtyType as integer,",
				"          EmailAddress1 as string,",
				"          LastName as string,",
				"          FaxPhoneExtension as string,",
				"          AutoSync as integer,",
				"          Admin as boolean,",
				"          HomePhone as string,",
				"          TaxID as string,",
				"          W9ReceivedDate as timestamp,",
				"          LicenseNumber as string,",
				"          PrimaryPhone as integer,",
				"          AdjudicatorLicense as string,",
				"          AutoRepairLicense as string,",
				"          AutoTowingLicense as string,",
				"          ID as long,",
				"          W9Received as boolean,",
				"          BeanVersion as integer,",
				"          PrimaryLocale as integer,",
				"          Score as integer,",
				"          NameDenorm as string,",
				"          AddressBookUID as string,",
				"          PrimaryLanguage as integer,",
				"          AttorneySpecialty as integer,",
				"          DoctorSpecialty as integer,",
				"          Suffix as integer,",
				"          FormerName as string,",
				"          NumDependents as integer,",
				"          Prefix as integer,",
				"          NameKanji as string,",
				"          HomePhoneCountry as integer,",
				"          TaxFilingStatus as integer,",
				"          Notes as string,",
				"          PolicySystemId as string,",
				"          DateOfBirth as timestamp,",
				"          Subtype as integer,",
				"          CellPhoneCountry as integer,",
				"          AdjudicativeDomain as integer,",
				"          CellPhone as string,",
				"          MedicalOrgSpecialty as integer,",
				"          Gender as integer,",
				"          FaxPhoneCountry as integer,",
				"          FaxPhone as string,",
				"          VendorNumber as string,",
				"          AttorneyLicense as string,",
				"          CellPhoneExtension as string,",
				"          VendorType as integer,",
				"          TaxStatus as integer,",
				"          EmployeeNumber as string,",
				"          WorkPhone as string,",
				"          NumDependentsU25 as integer,",
				"          HomePhoneExtension as string,",
				"          Particle as string,",
				"          PublicID as string,",
				"          ArchivePartition as long,",
				"          W9ValidTo as timestamp,",
				"          PendingLinkMessage as boolean,",
				"          CreateUserID as long,",
				"          Occupation as string,",
				"          LoadRelatedContacts as boolean,",
				"          VenueType as integer,",
				"          FirstName as string,",
				"          LastNameDenorm as string,",
				"          MaritalStatus as integer,",
				"          NumDependentsU18 as integer,",
				"          PrimaryAddressID as long,",
				"          FirstNameDenorm as string,",
				"          WorkPhoneCountry as integer,",
				"          UpdateUserID as long,",
				"          WorkPhoneExtension as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          LicenseState as integer,",
				"          Name as string,",
				"          PreferredCurrency as integer,",
				"          MedicalLicense as string,",
				"          MiddleName as string,",
				"          LastNameKanji as string,",
				"          WithholdingRate as decimal(4,1),",
				"          OrganizationType as integer,",
				"          CreateTime as timestamp,",
				"          W9ValidFrom as timestamp,",
				"          Preferred as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccContact",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> cctlExposureType",
				"source(output(",
				"          Retired as long,",
				"          IncidentID as long,",
				"          MatterID as long,",
				"          PublicID as string,",
				"          ClaimContactID as long,",
				"          ArchivePartition as long,",
				"          EvaluationID as long,",
				"          PartyNumber as integer,",
				"          CreateUserID as long,",
				"          ExposureID as long,",
				"          ID as long,",
				"          BeanVersion as integer,",
				"          NegotiationID as long,",
				"          UpdateUserID as long,",
				"          Comments as string,",
				"          LoadCommandID as long,",
				"          UpdateTime as timestamp,",
				"          WitnessStatementInd as integer,",
				"          Active as boolean,",
				"          PolicyID as long,",
				"          CoveredPartyType as integer,",
				"          WitnessPosition as integer,",
				"          CreateTime as timestamp,",
				"          Role as integer,",
				"          WitnessPerspective as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccClaimContactRole",
				"source(output(",
				"          L_en_US as string,",
				"          PRIORITY as integer,",
				"          TYPECODE as string,",
				"          S_en_US as integer,",
				"          RETIRED as boolean,",
				"          NAME as string,",
				"          ID as integer,",
				"          DESCRIPTION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> ccDetailedInjuryType",
				"source(output(",
				"          ICINJ_ID as integer,",
				"          INCIDENT_KEY as string,",
				"          INCIDENT_SBTYP_CODE as string,",
				"          MEDICARE_HIC_NO as string,",
				"          SHF_RCVD_FLAG as string,",
				"          INJURY_TYP_CODE as string,",
				"          SOURCE as string,",
				"          INCIDENT_TXT as string,",
				"          MEDICAL_TREATEMENT_CODE as string,",
				"          MEDICARE_PART_B_ELIGIBLE_FLAG as string,",
				"          INJURY_PRTY_NM as string,",
				"          MEDICARE_ONGG_RSPTY_FLAG as string,",
				"          MEDICARE_WORKERS_COMP_FLAG as string,",
				"          DEG_OF_DISABILITY_CODE as string,",
				"          INJURY_PRTY_NM_PFX_CODE as string,",
				"          INJURY_PRTY_FRST_NM as string,",
				"          INJURY_PRTY_MDL_NM as string,",
				"          INJURY_PRTY_LAST_NM as string,",
				"          INJURY_PRTY_NM_SFX_CODE as string,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE as integer,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE_DESC as string,",
				"          INCIDENT_GENERALINJURY_URYTYPE as integer,",
				"          INCIDENT_GENERALINJURY_URYTYPE_DESC as string,",
				"          INCIDENT_SEVERITY as integer,",
				"          ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> tgtDimInjuryIncident",
				"ccIncident, ccContact join(ccIncident@ID == ccContact@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinIncidentAndConact",
				"joinIncidentAndConact, cctlExposureType join(ccIncident@ID == cctlExposureType@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinIncidentAndContactAndExposuretype",
				"joinIncidentAndContactAndExposuretype, ccClaimContactRole join(ccIncident@ID == ccClaimContactRole@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinIncidentAndContactAndExposuretypeAndClaimcontactrole",
				"joinIncidentAndContactAndExposuretypeAndClaimcontactroleAndDetailedInjuryType derive(SRC_INCIDENT_KEY = concat('CC',ccIncident@PublicID),",
				"          SRC_SOURCE = 'CC',",
				"          SRC_ACTIVE_FLAG = 'Y',",
				"          SRC_ETL_ADD_DATETIMESTAMP = currentTimestamp(),",
				"          SRC_ETL_LAST_UPDATE_DATETIMESTAMP = currentTimestamp(),",
				"          SRC_INJURY_PRTY_LAST_NM = LastName) ~> ColumnTransformations",
				"joinIncidentAndContactAndExposuretypeAndClaimcontactrole, ccDetailedInjuryType join(GeneralInjuryType == ccDetailedInjuryType@ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinIncidentAndContactAndExposuretypeAndClaimcontactroleAndDetailedInjuryType",
				"ColumnTransformations derive(srcHashKey = sha1(SRC_INCIDENT_KEY,toString(ccIncident@Subtype),toString(MedicalOrgSpecialty),toString(cctlExposureType@TYPECODE),toString(SRC_SOURCE),toString(ccIncident@Description),toString(MedicalTreatmentType),toString(PartyNumber),toString(FirstName),toString(MiddleName),toString(DisabledDueToAccident),toInteger(DetailedInjuryType),toInteger(GeneralInjuryType),toInteger(Severity))) ~> SrcHashKey",
				"tgtDimInjuryIncident derive(tgtHashKey = sha1(INCIDENT_KEY,toString(INCIDENT_SBTYP_CODE),toString(MEDICARE_HIC_NO),toString(INJURY_TYP_CODE),toString(SOURCE),toString(INCIDENT_TXT),toString(MEDICAL_TREATEMENT_CODE),toString(INJURY_PRTY_NM_PFX_CODE),toString(INJURY_PRTY_FRST_NM),toString(INJURY_PRTY_MDL_NM),toString(DEG_OF_DISABILITY_CODE),toInteger(INCIDENT_DETAILEDINJURY_URYTYPE),toInteger(INCIDENT_GENERALINJURY_URYTYPE),toInteger(INCIDENT_SEVERITY))) ~> tgtHashKey",
				"SrcHashKey, tgtHashKey lookup(SRC_INCIDENT_KEY == INCIDENT_KEY,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupKeyColumn",
				"lookupKeyColumn split(isNull(INCIDENT_KEY),",
				"     !isNull(INCIDENT_KEY)&&notEquals(srcHashKey,tgtHashKey),",
				"     disjoint: false) ~> insert@(INSERT, UPDATE, NOUPDATE)",
				"insert@UPDATE alterRow(updateIf(true())) ~> updateCondition",
				"insert@INSERT sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ICINJ_ID as integer,",
				"          INCIDENT_KEY as string,",
				"          INCIDENT_SBTYP_CODE as string,",
				"          MEDICARE_HIC_NO as string,",
				"          SHF_RCVD_FLAG as string,",
				"          INJURY_TYP_CODE as string,",
				"          SOURCE as string,",
				"          INCIDENT_TXT as string,",
				"          MEDICAL_TREATEMENT_CODE as string,",
				"          MEDICARE_PART_B_ELIGIBLE_FLAG as string,",
				"          INJURY_PRTY_NM as string,",
				"          MEDICARE_ONGG_RSPTY_FLAG as string,",
				"          MEDICARE_WORKERS_COMP_FLAG as string,",
				"          DEG_OF_DISABILITY_CODE as string,",
				"          INJURY_PRTY_NM_PFX_CODE as string,",
				"          INJURY_PRTY_FRST_NM as string,",
				"          INJURY_PRTY_MDL_NM as string,",
				"          INJURY_PRTY_LAST_NM as string,",
				"          INJURY_PRTY_NM_SFX_CODE as string,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE as integer,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE_DESC as string,",
				"          INCIDENT_GENERALINJURY_URYTYPE as integer,",
				"          INCIDENT_GENERALINJURY_URYTYPE_DESC as string,",
				"          INCIDENT_SEVERITY as integer,",
				"          ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          INCIDENT_KEY = SRC_INCIDENT_KEY,",
				"          INCIDENT_SBTYP_CODE = insert@INSERT@Subtype,",
				"          MEDICARE_HIC_NO = MedicalOrgSpecialty,",
				"          INJURY_TYP_CODE = insert@INSERT@TYPECODE,",
				"          SOURCE = SRC_SOURCE,",
				"          INCIDENT_TXT = insert@INSERT@Description,",
				"          MEDICAL_TREATEMENT_CODE = MedicalTreatmentType,",
				"          DEG_OF_DISABILITY_CODE = DisabledDueToAccident,",
				"          INJURY_PRTY_NM_PFX_CODE = PartyNumber,",
				"          INJURY_PRTY_FRST_NM = FirstName,",
				"          INJURY_PRTY_MDL_NM = MiddleName,",
				"          INJURY_PRTY_LAST_NM = SRC_INJURY_PRTY_LAST_NM,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE = DetailedInjuryType,",
				"          INCIDENT_GENERALINJURY_URYTYPE = GeneralInjuryType,",
				"          INCIDENT_SEVERITY = Severity,",
				"          ACTIVE_FLAG = SRC_ACTIVE_FLAG,",
				"          ETL_ADD_DATETIMESTAMP = SRC_ETL_ADD_DATETIMESTAMP,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP = SRC_ETL_LAST_UPDATE_DATETIMESTAMP",
				"     )) ~> dimInjuryIncident",
				"updateCondition sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     input(",
				"          ICINJ_ID as integer,",
				"          INCIDENT_KEY as string,",
				"          INCIDENT_SBTYP_CODE as string,",
				"          MEDICARE_HIC_NO as string,",
				"          SHF_RCVD_FLAG as string,",
				"          INJURY_TYP_CODE as string,",
				"          SOURCE as string,",
				"          INCIDENT_TXT as string,",
				"          MEDICAL_TREATEMENT_CODE as string,",
				"          MEDICARE_PART_B_ELIGIBLE_FLAG as string,",
				"          INJURY_PRTY_NM as string,",
				"          MEDICARE_ONGG_RSPTY_FLAG as string,",
				"          MEDICARE_WORKERS_COMP_FLAG as string,",
				"          DEG_OF_DISABILITY_CODE as string,",
				"          INJURY_PRTY_NM_PFX_CODE as string,",
				"          INJURY_PRTY_FRST_NM as string,",
				"          INJURY_PRTY_MDL_NM as string,",
				"          INJURY_PRTY_LAST_NM as string,",
				"          INJURY_PRTY_NM_SFX_CODE as string,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE as integer,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE_DESC as string,",
				"          INCIDENT_GENERALINJURY_URYTYPE as integer,",
				"          INCIDENT_GENERALINJURY_URYTYPE_DESC as string,",
				"          INCIDENT_SEVERITY as integer,",
				"          ACTIVE_FLAG as string,",
				"          ETL_ADD_DATETIMESTAMP as timestamp,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['INCIDENT_KEY'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          INCIDENT_KEY = SRC_INCIDENT_KEY,",
				"          INCIDENT_SBTYP_CODE = insert@UPDATE@Subtype,",
				"          MEDICARE_HIC_NO = MedicalOrgSpecialty,",
				"          INJURY_TYP_CODE = insert@UPDATE@TYPECODE,",
				"          SOURCE,",
				"          INCIDENT_TXT = insert@UPDATE@Description,",
				"          MEDICAL_TREATEMENT_CODE = MedicalTreatmentType,",
				"          INJURY_PRTY_NM = PartyNumber,",
				"          DEG_OF_DISABILITY_CODE = DisabledDueToAccident,",
				"          INJURY_PRTY_NM_PFX_CODE = PartyNumber,",
				"          INJURY_PRTY_FRST_NM = FirstName,",
				"          INJURY_PRTY_MDL_NM = MiddleName,",
				"          INJURY_PRTY_LAST_NM = SRC_INJURY_PRTY_LAST_NM,",
				"          INCIDENT_DETAILEDINJURY_URYTYPE = DetailedInjuryType,",
				"          INCIDENT_GENERALINJURY_URYTYPE = GeneralInjuryType,",
				"          INCIDENT_SEVERITY = Severity,",
				"          ACTIVE_FLAG,",
				"          ETL_ADD_DATETIMESTAMP,",
				"          ETL_LAST_UPDATE_DATETIMESTAMP",
				"     )) ~> sink1"
			]
		}
	}
}